{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/add-dates/add-dates.component.html","webpack:///./src/app/admin/AdminStuff/amenitie/amenitie.component.html","webpack:///./src/app/admin/AdminStuff/apartments/apartments.component.html","webpack:///./src/app/admin/AdminStuff/apartments/edit-apartment/edit-apartment.component.html","webpack:///./src/app/admin/AdminStuff/create-host/create-host.component.html","webpack:///./src/app/admin/AdminStuff/reservations/reservations.component.html","webpack:///./src/app/admin/AdminStuff/users/users.component.html","webpack:///./src/app/admin/admin.component.html","webpack:///./src/app/app.component.html","webpack:///./src/app/guest/guest-apartments/apartment-details/apartment-details.component.html","webpack:///./src/app/guest/guest-apartments/guest-apartments.component.html","webpack:///./src/app/guest/guest-requests/guest-requests.component.html","webpack:///./src/app/guest/guest-reservations/guest-reservations.component.html","webpack:///./src/app/guest/guest.component.html","webpack:///./src/app/home-apartment-details/home-apartment-details.component.html","webpack:///./src/app/home/home.component.html","webpack:///./src/app/host/HostStuff/host-apartments/edit-host-apartment/edit-host-apartment.component.html","webpack:///./src/app/host/HostStuff/host-apartments/host-apartments.component.html","webpack:///./src/app/host/HostStuff/host-create-apartment/host-create-apartment.component.html","webpack:///./src/app/host/HostStuff/host-requests/host-requests.component.html","webpack:///./src/app/host/HostStuff/host-reservations/host-reservations.component.html","webpack:///./src/app/host/HostStuff/upload-picture/upload-picture.component.html","webpack:///./src/app/host/host.component.html","webpack:///./src/app/log-in/log-in.component.html","webpack:///./src/app/loged-user/loged-user.component.html","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/register/register.component.html","webpack:///./src/app/Classes/Apartment.ts","webpack:///./src/app/Classes/DateModel.ts","webpack:///./src/app/Classes/User.ts","webpack:///./src/app/add-dates/add-dates.component.css","webpack:///./src/app/add-dates/add-dates.component.ts","webpack:///./src/app/admin.service.ts","webpack:///./src/app/admin/AdminStuff/amenitie/amenitie.component.css","webpack:///./src/app/admin/AdminStuff/amenitie/amenitie.component.ts","webpack:///./src/app/admin/AdminStuff/apartments/apartments.component.css","webpack:///./src/app/admin/AdminStuff/apartments/apartments.component.ts","webpack:///./src/app/admin/AdminStuff/apartments/edit-apartment/edit-apartment.component.css","webpack:///./src/app/admin/AdminStuff/apartments/edit-apartment/edit-apartment.component.ts","webpack:///./src/app/admin/AdminStuff/create-host/create-host.component.css","webpack:///./src/app/admin/AdminStuff/create-host/create-host.component.ts","webpack:///./src/app/admin/AdminStuff/reservations/reservations.component.css","webpack:///./src/app/admin/AdminStuff/reservations/reservations.component.ts","webpack:///./src/app/admin/AdminStuff/users/users.component.css","webpack:///./src/app/admin/AdminStuff/users/users.component.ts","webpack:///./src/app/admin/admin.component.css","webpack:///./src/app/admin/admin.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/guest.service.ts","webpack:///./src/app/guest/guest-apartments/apartment-details/apartment-details.component.css","webpack:///./src/app/guest/guest-apartments/apartment-details/apartment-details.component.ts","webpack:///./src/app/guest/guest-apartments/guest-apartments.component.css","webpack:///./src/app/guest/guest-apartments/guest-apartments.component.ts","webpack:///./src/app/guest/guest-requests/guest-requests.component.css","webpack:///./src/app/guest/guest-requests/guest-requests.component.ts","webpack:///./src/app/guest/guest-reservations/guest-reservations.component.css","webpack:///./src/app/guest/guest-reservations/guest-reservations.component.ts","webpack:///./src/app/guest/guest.component.css","webpack:///./src/app/guest/guest.component.ts","webpack:///./src/app/home-apartment-details/home-apartment-details.component.css","webpack:///./src/app/home-apartment-details/home-apartment-details.component.ts","webpack:///./src/app/home.service.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/host.service.ts","webpack:///./src/app/host/HostStuff/host-apartments/edit-host-apartment/edit-host-apartment.component.css","webpack:///./src/app/host/HostStuff/host-apartments/edit-host-apartment/edit-host-apartment.component.ts","webpack:///./src/app/host/HostStuff/host-apartments/host-apartments.component.css","webpack:///./src/app/host/HostStuff/host-apartments/host-apartments.component.ts","webpack:///./src/app/host/HostStuff/host-create-apartment/host-create-apartment.component.css","webpack:///./src/app/host/HostStuff/host-create-apartment/host-create-apartment.component.ts","webpack:///./src/app/host/HostStuff/host-requests/host-requests.component.css","webpack:///./src/app/host/HostStuff/host-requests/host-requests.component.ts","webpack:///./src/app/host/HostStuff/host-reservations/host-reservations.component.css","webpack:///./src/app/host/HostStuff/host-reservations/host-reservations.component.ts","webpack:///./src/app/host/HostStuff/upload-picture/upload-picture.component.css","webpack:///./src/app/host/HostStuff/upload-picture/upload-picture.component.ts","webpack:///./src/app/host/host.component.css","webpack:///./src/app/host/host.component.ts","webpack:///./src/app/log-in/log-in.component.css","webpack:///./src/app/log-in/log-in.component.ts","webpack:///./src/app/loged-user/loged-user.component.css","webpack:///./src/app/loged-user/loged-user.component.ts","webpack:///./src/app/login.service.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/storage.service.ts","webpack:///./src/app/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<h1>Add rent dates:</h1>\\n<div>\\n  <form [formGroup]=\\\"addForm\\\">\\n    <table >\\n      <tr>\\n        <td>\\n          Choose date: \\n        </td>\\n        <td>\\n          <input type=\\\"date\\\" formControlName=\\\"date\\\" required>\\n        </td>\\n        <td>\\n          <button (click)=\\\"onAdd()\\\" [disabled]=\\\"addForm.invalid\\\">Add date</button>\\n        </td>\\n        <td>\\n          <button (click)=\\\"onDone()\\\">Done</button>\\n        </td>\\n      </tr>   \\n    </table>\\n  </form>\\n</div>\\n\"","module.exports = \"<app-admin></app-admin>\\n<br><br><br>\\n<div>\\n  <form [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n    <table >\\n      <tr>\\n        <td>\\n          Item name: \\n        </td>\\n        <td>\\n            <input type=\\\"text\\\" formControlName=\\\"Name\\\" required />\\n        </td>\\n        <td>\\n            <button type=\\\"submit\\\" [disabled]=\\\"addForm.invalid\\\" >Add</button>\\n        </td>\\n      </tr>\\n      \\n    </table>\\n  </form>\\n</div>\\n<br><br>\\n\\n<div>\\n\\n    <table  class=\\\"comment-table\\\">\\n      <tr>\\n        <td align=\\\"*\\\" >\\n            <b><i> Amenities :</i> </b>\\n        </td>\\n      </tr>\\n      <tr *ngFor=\\\"let amenitie of allAmenities\\\">\\n        <td align=\\\"*\\\">\\n          <p>{{amenitie.Name}}</p>\\n         \\n        </td>\\n        <td>\\n            <button id=\\\"{{amenitie.ID}}\\\" (click)=\\\"deleteAmenitie($event)\\\" >Delete</button>\\n        </td>\\n        \\n      </tr>\\n      \\n    </table>\\n \\n  </div>\"","module.exports = \"<app-admin></app-admin>\\n<br><br><br>\\n\\n<!--Search-->\\n<div>\\n  <form [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"onSearch()\\\">\\n    <table>\\n      <tr>\\n        <td>\\n          WHERE: \\n        </td>\\n        <td>\\n          <input type=\\\"text\\\" formControlName=\\\"settlement\\\">\\n        </td>\\n        <td>\\n          CHECK-IN: \\n        </td>\\n        <td>\\n          <input type=\\\"date\\\" formControlName=\\\"checkIn\\\">\\n        </td>\\n        <td>\\n          CHECKOUT: \\n        </td>\\n        <td>\\n          <input type=\\\"date\\\" formControlName=\\\"checkOut\\\">\\n        </td>\\n        <td>\\n          GUEST NUMBER: \\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"guestNumber\\\" min=\\\"1\\\">\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n         MINIMUM ROOMS: \\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"minRooms\\\" min=\\\"1\\\">\\n        </td>\\n        <td>\\n          MAXIMUM ROOMS: \\n         </td>\\n         <td>\\n           <input type=\\\"number\\\" formControlName=\\\"maxRooms\\\" min=\\\"1\\\">\\n         </td>\\n         <td>\\n          MAXIMUM PRICE: \\n         </td>\\n         <td>\\n           <input type=\\\"number\\\" formControlName=\\\"maxPrice\\\" min=\\\"1\\\">\\n         </td>\\n         <td>\\n          TYPE: \\n         </td>\\n         <td>\\n          <select formControlName=\\\"apartmentType\\\">\\n            <option *ngFor=\\\"let type of ApartmentType\\\" >{{type}}</option> \\n          </select>\\n        </td>       \\n      </tr>\\n\\n      <tr>\\n        <td>\\n          STATUS: \\n         </td>\\n         <td>\\n          <select formControlName=\\\"apartmentStatus\\\">\\n            <option *ngFor=\\\"let status of ApartmentStatus\\\" >{{status}}</option> \\n          </select>\\n        </td>  \\n\\n        <td>\\n          Amenities: \\n        </td>\\n        <td colspan=\\\"6\\\">\\n          <label formArrayName=\\\"amNames\\\" *ngFor=\\\"let name of searchForm.controls.amNames.controls; let i = index\\\">\\n            <input type=\\\"checkbox\\\" [formControlName]=\\\"i\\\">\\n            {{amNames[i]}}  \\n          </label>\\n        </td>      \\n        <td align=\\\"2\\\" >\\n          <button type=\\\"submit\\\" >Search</button>\\n        </td>\\n      </tr>\\n    </table>\\n  </form>\\n</div>\\n<br><br>\\n\\n<h3>Apartments:</h3>\\n<div>\\n  <button (click)=\\\"reset()\\\">Show all</button>\\n  <button (click)=\\\"sortLow()\\\">Sort by the lowest price</button>\\n  <button (click)=\\\"sortHigh()\\\">Sort by the highest price</button>\\n</div>\\n\\n<div >\\n  <table >\\n      <tr *ngFor=\\\"let apartment of FiltredApartments\\\">\\n        <td align=\\\"1\\\">\\n          <p class=\\\"p-table-home\\\"> <i>Apartment type:</i> {{apartment.Type}} , <i>Number of rooms:</i> {{apartment.RoomNumber}} ,  \\n            <i>Guest Number :</i>{{apartment.GuestNumber}}<i>, Price per nigth :</i>{{apartment.PricePerNight}},\\n            <i>Settlement :</i>{{apartment.Settlement}}\\n\\n          </p>           \\n        </td>\\n        <td align=\\\"3\\\">\\n            <img src=\\\"{{apartment.Pictures[0]}}\\\" alt=\\\"No pictures available\\\" height=\\\"100px\\\" width=\\\"150px\\\"/>\\n        </td>\\n        <td align=\\\"1\\\">\\n          <button id=\\\"{{apartment.ID}}\\\" (click)=\\\"editApartment(apartment.ID)\\\" >Edit Apartment</button>\\n        </td>\\n        \\n      </tr>\\n  </table>\\n  \\n</div>\\n\"","module.exports = \"\\n\\n<button (click) = \\\"returnBack()\\\"> < Back</button>\\n<div  class=\\\"login-form\\\">\\n  <form [formGroup]=\\\"editForm\\\" >\\n    <table>\\n      <tr>\\n        <td colspan=\\\"2\\\" align=\\\"center\\\">\\n          <h2>Edit apartment</h2>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Type:\\n        </td>\\n        <td>\\n          <select formControlName=\\\"Type\\\">\\n            <option *ngFor=\\\"let type of apartmentTypes\\\" [value]=\\\"type\\\">{{type}}</option>\\n          </select>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Room Number:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" min=1 formControlName=\\\"RoomNumber\\\" required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Guest Number:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" min=1 formControlName=\\\"GuestNumber\\\" required >\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Price Per Night:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"PricePerNight\\\" required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Sing Up Time:\\n        </td>\\n        <td>\\n          <input type=\\\"time\\\" formControlName=\\\"SingUpTime\\\" required>          \\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Sing Out Time:\\n        </td>\\n        <td>\\n          <input type=\\\"time\\\" formControlName=\\\"SingOutTime\\\" required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Status:\\n        </td>\\n        <td>\\n          <select formControlName=\\\"Status\\\">\\n            <option *ngFor=\\\"let status of apartmentStatus\\\" [value]=\\\"status\\\">{{status}}</option>\\n          </select>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Latitude:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"Latitude\\\" required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Longitude:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"Longitude\\\" required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Streat:\\n        </td>\\n        <td>\\n          <input type=\\\"text\\\" formControlName=\\\"Streat\\\" required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Streat Number:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"StreatNumber\\\" required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Settlement:\\n        </td>\\n        <td>\\n          <input type=\\\"text\\\" formControlName=\\\"Settlement\\\" required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Zip Code:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"ZipCode\\\" required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Host Name:\\n        </td>\\n        <td>\\n          <input type=\\\"text\\\" formControlName=\\\"HostName\\\" readonly required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Host Surname:\\n        </td>\\n        <td>\\n          <input type=\\\"text\\\" formControlName=\\\"HostSurname\\\" readonly required>\\n        </td>\\n    </tr> \\n      <tr>\\n        <td colspan=\\\"2\\\">\\n          <label formArrayName=\\\"amNames\\\" *ngFor=\\\"let name of editForm.controls.amNames.controls; let i = index\\\">\\n            <input type=\\\"checkbox\\\" [formControlName]=\\\"i\\\">\\n            {{amNames[i]}}\\n            <br>\\n          </label>\\n        </td>\\n      </tr>\\n      \\n\\n      <tr>\\n        <td colspan=\\\"1\\\" align=\\\"right\\\">\\n          <button (click)=\\\"onChange()\\\" class=\\\"registerbtn\\\"  [disabled]=\\\"editForm.invalid\\\">Change</button>\\n        </td>\\n        <td colspan=\\\"1\\\" align=\\\"right\\\">\\n          <button (click)=\\\"onDelete()\\\" class=\\\"deletebtn\\\"  >Delete</button>\\n        </td>\\n      </tr>\\n    </table>\\n  </form>\\n</div>\\n\\n<div style=\\\"overflow-x: scroll; height: 600px; width: 90%;\\\">\\n  <table>\\n    <tr align=\\\"center\\\">\\n      <b>Click on the picture to delete it : </b>\\n    </tr>\\n    <tr>\\n      <td *ngFor=\\\"let picture of apartment.Pictures; let i = index\\\">\\n        <img id=\\\"{{picture}}\\\" src=\\\"{{picture}}\\\" width=\\\"500px\\\" height=\\\"500px\\\" (click)=\\\"deletePicture($event)\\\" />\\n      </td>\\n    </tr>\\n    <tr colspan=\\\"*\\\" align=\\\"left\\\">\\n      <button (click)=\\\"addNewPicutres()\\\">Add new picture</button>\\n    </tr>\\n  </table>\\n</div>\\n\\n<div>\\n  <table *ngFor=\\\"let comment of apartmentComments\\\" class=\\\"comment-table\\\">\\n    <tr>\\n      <td align=\\\"*\\\">\\n        <p><b>{{comment.UserName}}: </b> <i> {{comment.Rate}}*   </i></p>  \\n\\n        <p class=\\\"p-table-home\\\">  {{comment.Text}} </p> \\n        <p>Blocked: {{comment.Blocked}} </p>\\n        <button id=\\\"{{comment.Id}}\\\" (click)=\\\"deleteComment(comment.Id)\\\" >Delete comment</button>\\n      </td>\\n      \\n    </tr>\\n    \\n  </table>\\n</div>\"","module.exports = \"<app-admin></app-admin>\\n<br><br>\\n\\n<div class=\\\"login-form\\\">\\n  <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <table>\\n      <tr>\\n        <td colspan=\\\"2\\\" align=\\\"center\\\">\\n          <h2>Create host</h2>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Name:\\n        </td>\\n        <td>\\n          <input type=\\\"text\\\" formControlName=\\\"name\\\" required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Surname:\\n        </td>\\n        <td>\\n          <input type=\\\"text\\\" formControlName=\\\"surname\\\" required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Username:\\n        </td>\\n        <td>\\n          <input type=\\\"text\\\" formControlName=\\\"username\\\" required >\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Password:\\n        </td>\\n        <td>\\n          <input type=\\\"password\\\" formControlName=\\\"password\\\" required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Confirm Password:\\n        </td>\\n        <td>\\n          <input type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" required>\\n          <br />\\n          <font *ngIf=\\\"invalidPass\\\" color=\\\"red\\\" size=\\\"2\\\">\\n          Passwords must be equal\\n          </font> \\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Gender:\\n        </td>\\n        <td>\\n          <select formControlName=\\\"gender\\\">\\n            <option *ngFor=\\\"let gender of genders\\\" [value]=\\\"gender\\\">{{gender}}</option> \\n          </select>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td colspan=\\\"2\\\" align=\\\"right\\\">\\n          <button type=\\\"submit\\\" class=\\\"registerbtn\\\"  [disabled]=\\\"registerForm.invalid\\\">Create host</button>\\n        </td>\\n      </tr>\\n    </table>\\n  </form>\\n  </div>\"","module.exports = \"<app-admin></app-admin>\\n<br><br><br>\\n\\n<!--Search-->\\n<div>\\n  <form [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"onSearch()\\\">\\n    <table>\\n      <tr>\\n        <td>\\n          USERNAME: \\n        </td>\\n        <td>\\n          <input type=\\\"text\\\" formControlName=\\\"guestUsername\\\">\\n        </td>\\n        <td>\\n          STATUS: \\n         </td>\\n         <td>\\n          <select formControlName=\\\"reservationStatus\\\">\\n            <option *ngFor=\\\"let status of ReservationStatus\\\" >{{status}}</option> \\n          </select>\\n        </td> \\n        <td align=\\\"2\\\" >\\n          <button type=\\\"submit\\\" >Search</button>\\n        </td>\\n      </tr>\\n    </table>\\n  </form>\\n</div>\\n<h3>Reservations:</h3>\\n<div>\\n  <button (click)=\\\"reset()\\\">Show all</button>\\n  <button (click)=\\\"sortLow()\\\">Sort by the lowest price</button>\\n  <button (click)=\\\"sortHigh()\\\">Sort by the highest price</button>\\n</div>\\n\\n<div >\\n  <table >\\n      <tr *ngFor=\\\"let reservation of FiltredReservations\\\">\\n        <td align=\\\"1\\\">\\n          <p class=\\\"p-table-home\\\"> <i>Stauts: </i> {{reservation.Stauts}} , <i>Sing Up Date: </i> {{reservation.SingUpDate}} ,  \\n            <i>Number Of Nights :</i>{{reservation.NumberOfNights}}<i>, Total Price :</i>{{reservation.TotalPrice}},\\n            <i>Guest : </i>{{reservation.GuestUserName}},<i>Host : </i>{{reservation.HostUserName}}\\n            <br>\\n            <b>Apartment : </b>\\n            <br>\\n            {{reservation.ApartmentStreat}} {{reservation.ApartmentStreatNumber}},\\n            {{reservation.ApartmentSettlement}} {{reservation.ApartmentZipCode}}\\n\\n          </p>           \\n        </td>               \\n      </tr>\\n  </table>\\n  \\n</div>\\n\"","module.exports = \"<app-admin></app-admin>\\n<br><br><br>\\n<div>\\n  <form [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"onSearch()\\\">\\n    <table>\\n      <tr>\\n        <td>\\n          Role: \\n        </td>\\n        <td>\\n          <select formControlName=\\\"Role\\\">\\n              <option *ngFor=\\\"let role of roles\\\" [value]=\\\"role\\\">{{role}}</option>\\n            </select>\\n        </td>\\n        <td>\\n          Gender: \\n        </td>\\n        <td>\\n          <select formControlName=\\\"Gender\\\">\\n              <option *ngFor=\\\"let gender of genders\\\" [value]=\\\"gender\\\">{{gender}}</option>\\n            </select>\\n        </td>\\n        <td>\\n          Username: \\n        </td>\\n        <td>\\n          <input type=\\\"text\\\" formControlName=\\\"Username\\\">\\n        </td>             \\n        \\n      <td align=\\\"2\\\" >\\n        <button type=\\\"submit\\\" >Search</button>\\n      </td>\\n      \\n    </tr>\\n    </table>\\n  </form>\\n</div>\\n<br><br>\\n\\n<h3>Users:</h3> \\n<button  (click)=\\\"onReset()\\\" >Show all</button>\\n<br>\\n\\n<div >\\n  <table >\\n      <tr *ngFor=\\\"let user of SearchedUsers\\\">\\n        <td align=\\\"1\\\">\\n          <p class=\\\"p-table-home\\\"> <i>Name:</i> {{user.Name}} , <i>Surname:</i> {{user.Surname}} ,  \\n            <i>Username :</i>{{user.UserName}}<i>, Gender :</i>{{user.Gender}},\\n            <i>Role :</i>{{user.Role}},<i>Blocked :</i>{{user.Blocked}}\\n\\n          </p>           \\n        </td>\\n        <td align=\\\"1\\\">\\n          <button id=\\\"{{user.ID}}\\\" (click)=\\\"changeStatus(user.ID)\\\" >Change Status</button>\\n        </td>\\n        \\n      </tr>\\n  </table>\\n  \\n</div>\\n\"","module.exports = \"<nav>\\n  <a href=\\\"admin/createhost\\\" >Create host </a>\\n  <a href=\\\"admin/apartments\\\" >Apartments </a>\\n  <a href=\\\"admin/reservations\\\" >Reservations </a>\\n  <a href=\\\"admin/users\\\" >Users </a>\\n  <a href=\\\"admin/amenities\\\" >Amenities </a>\\n</nav>\\n<app-loged-user></app-loged-user>\\n\"","module.exports = \"<router-outlet></router-outlet>\\n\"","module.exports = \"<button (click) = \\\"returnBack()\\\"> < Back</button>\\n<div  class=\\\"normal-form\\\">\\n  <form [formGroup]=\\\"editForm\\\" >\\n    <table>\\n      <tr>\\n        <td colspan=\\\"2\\\" align=\\\"center\\\">\\n          <h2>Selected apartment:</h2>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Type:\\n        </td>\\n        <td>\\n          <input type=\\\"text\\\" formControlName=\\\"Type\\\" readonly>           \\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Room Number:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" min=1 formControlName=\\\"RoomNumber\\\" required readonly>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Guest Number:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" min=1 formControlName=\\\"GuestNumber\\\" required readonly>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Price Per Night:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"PricePerNight\\\" required readonly>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Sing Up Time:\\n        </td>\\n        <td>\\n          <input type=\\\"time\\\" formControlName=\\\"SingUpTime\\\" required readonly>          \\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Sing Out Time:\\n        </td>\\n        <td>\\n          <input type=\\\"time\\\" formControlName=\\\"SingOutTime\\\" required readonly>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Status:\\n        </td>\\n        <td>\\n          <input type=\\\"text\\\" formControlName=\\\"Status\\\" readonly>            \\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Latitude:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"Latitude\\\" required readonly>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Longitude:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"Longitude\\\" required readonly>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Streat:\\n        </td>\\n        <td>\\n          <input type=\\\"text\\\" formControlName=\\\"Streat\\\" required readonly>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Streat Number:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"StreatNumber\\\" required readonly>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Settlement:\\n        </td>\\n        <td>\\n          <input type=\\\"text\\\" formControlName=\\\"Settlement\\\" required readonly>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Zip Code:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"ZipCode\\\" required readonly>\\n        </td>\\n      </tr>            \\n    </table>\\n  </form>\\n</div>\\n<br>\\n<!--Pictures-->\\n<div style=\\\"overflow-x: scroll; height: 600px; width: 90%;\\\">\\n    <table>\\n      <tr align=\\\"center\\\">\\n        <b>Apartment pictures : </b>\\n      </tr>\\n      <tr>\\n        <td *ngFor=\\\"let picture of apartment.Pictures; let i = index\\\">\\n          <img id=\\\"{{picture}}\\\" src=\\\"{{picture}}\\\" width=\\\"500px\\\" height=\\\"500px\\\"  />\\n        </td>\\n      </tr>\\n    </table>\\n  </div>\\n\\n<!--Amenities-->\\n<div>\\n  <table >\\n    <tr>\\n      <td>\\n        Apartment Amenities:\\n      </td>\\n    </tr>\\n    <tr *ngFor=\\\"let amenitie of amNames\\\">\\n      <td >\\n        <b>{{amenitie}}</b> ;  \\n      </td>\\n    </tr>\\n  </table>\\n</div>\\n<br>\\n<!--Map with location-->\\n\\n<h4>Comments:</h4>\\n<!--Comments-->\\n<div>\\n  <table *ngFor=\\\"let comment of apartmentComments\\\" class=\\\"comment-table\\\">\\n    <tr>\\n      <td align=\\\"*\\\">\\n        <p><b>{{comment.UserName}}: </b> <i> {{comment.Rate}}*   </i></p>  \\n        <p class=\\\"p-table-home\\\">  {{comment.Text}} </p> \\n      </td>      \\n    </tr>\\n    \\n  </table>\\n</div>\"","module.exports = \"<app-guest></app-guest>\\n<br><br><br>\\n\\n<!--Search-->\\n<div>\\n  <form [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"onSearch()\\\">\\n    <table>\\n      <tr>\\n        <td>\\n          WHERE: \\n        </td>\\n        <td>\\n          <input type=\\\"text\\\" formControlName=\\\"settlement\\\">\\n        </td>\\n        <td>\\n          CHECK-IN: \\n        </td>\\n        <td>\\n          <input type=\\\"date\\\" formControlName=\\\"checkIn\\\">\\n        </td>\\n        <td>\\n          CHECKOUT: \\n        </td>\\n        <td>\\n          <input type=\\\"date\\\" formControlName=\\\"checkOut\\\">\\n        </td>\\n        <td>\\n          GUEST NUMBER: \\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"guestNumber\\\" min=\\\"1\\\">\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n         MINIMUM ROOMS: \\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"minRooms\\\" min=\\\"1\\\">\\n        </td>\\n        <td>\\n          MAXIMUM ROOMS: \\n         </td>\\n         <td>\\n           <input type=\\\"number\\\" formControlName=\\\"maxRooms\\\" min=\\\"1\\\">\\n         </td>\\n         <td>\\n          MAXIMUM PRICE: \\n         </td>\\n         <td>\\n           <input type=\\\"number\\\" formControlName=\\\"maxPrice\\\" min=\\\"1\\\">\\n         </td>\\n         <td>\\n          TYPE: \\n         </td>\\n         <td>\\n          <select formControlName=\\\"apartmentType\\\">\\n            <option *ngFor=\\\"let type of ApartmentType\\\" >{{type}}</option> \\n          </select>\\n        </td>       \\n      </tr>\\n\\n      <tr>\\n        <td>\\n          Amenities: \\n        </td>\\n        <td colspan=\\\"6\\\">\\n          <label formArrayName=\\\"amNames\\\" *ngFor=\\\"let name of searchForm.controls.amNames.controls; let i = index\\\">\\n            <input type=\\\"checkbox\\\" [formControlName]=\\\"i\\\">\\n            {{amNames[i]}}  \\n          </label>\\n        </td>      \\n        <td align=\\\"2\\\" >\\n          <button type=\\\"submit\\\" >Search</button>\\n        </td>\\n      </tr>\\n    </table>\\n  </form>\\n</div>\\n<br><br>\\n<!--Active-->\\n<h3>Active Apartments:</h3>\\n<div>\\n  <button (click)=\\\"reset()\\\">Show all</button>\\n  <button (click)=\\\"sortLow()\\\">Sort by the lowest price</button>\\n  <button (click)=\\\"sortHigh()\\\">Sort by the highest price</button>\\n</div>\\n\\n<div >\\n  <table >\\n      <tr *ngFor=\\\"let apartment of FiltredApartments\\\">\\n        <td align=\\\"1\\\">\\n          <p class=\\\"p-table-home\\\"> <i>Apartment type:</i> {{apartment.Type}} , <i>Number of rooms:</i> {{apartment.RoomNumber}} ,  \\n            <i>Guest Number :</i>{{apartment.GuestNumber}}<i>, Price per nigth :</i>{{apartment.PricePerNight}},\\n            <i>Settlement :</i>{{apartment.Settlement}}\\n\\n          </p>           \\n        </td>\\n        <td align=\\\"3\\\">\\n            <img src=\\\"{{apartment.Pictures[0]}}\\\" alt=\\\"No pictures available\\\" height=\\\"100px\\\" width=\\\"150px\\\"/>\\n        </td>\\n        <td align=\\\"1\\\">\\n          <button id=\\\"{{apartment.ID}}\\\" (click)=\\\"moreDetails(apartment.ID)\\\" >More details</button>\\n        </td>\\n      </tr>\\n  </table>\\n  \\n</div>\\n\"","module.exports = \"<app-guest></app-guest>\\n<br>\\n<h3>Reservation Requests:</h3>\\n\\n<div >\\n  <table >\\n      <tr *ngFor=\\\"let reservation of createdReservations\\\">\\n        <td align=\\\"1\\\">\\n          <p class=\\\"p-table-home\\\"> <i>Stauts: </i> {{reservation.Stauts}} , <i>Sing Up Date: </i> {{reservation.SingUpDate}} ,  \\n            <i>Number Of Nights :</i>{{reservation.NumberOfNights}}<i>, Total Price :</i>{{reservation.TotalPrice}},\\n            <i>Guest : </i>{{reservation.GuestUserName}},<i>Host : </i>{{reservation.HostUserName}}\\n            <br>\\n            <b>Apartment : </b>\\n            <br>\\n            {{reservation.ApartmentStreat}} {{reservation.ApartmentStreatNumber}},\\n            {{reservation.ApartmentSettlement}} {{reservation.ApartmentZipCode}}\\n\\n          </p>           \\n        </td> \\n        <td align=\\\"1\\\">            \\n            <button id=\\\"{{reservation.ID}}\\\"  (click)=\\\"CancelRequest($event)\\\">Cancel</button>\\n          </td>                \\n      </tr>\\n  </table>\\n  \\n</div>\\n\\n<br>\\n\\n<h3>Accepted Reservations:</h3>\\n\\n<div >\\n  <table >\\n      <tr *ngFor=\\\"let reservation of acceptedReservations\\\">\\n        <td align=\\\"1\\\">\\n          <p class=\\\"p-table-home\\\"> <i>Stauts: </i> {{reservation.Stauts}} , <i>Sing Up Date: </i> {{reservation.SingUpDate}} ,  \\n            <i>Number Of Nights :</i>{{reservation.NumberOfNights}}<i>, Total Price :</i>{{reservation.TotalPrice}},\\n            <i>Guest : </i>{{reservation.GuestUserName}},<i>Host : </i>{{reservation.HostUserName}}\\n            <br>\\n            <b>Apartment : </b>\\n            <br>\\n            {{reservation.ApartmentStreat}} {{reservation.ApartmentStreatNumber}},\\n            {{reservation.ApartmentSettlement}} {{reservation.ApartmentZipCode}}\\n\\n          </p>           \\n        </td>\\n        <td>\\n          <button id=\\\"{{reservation.ID}}\\\" (click)=\\\"CancelRequest($event)\\\">Cancel</button>\\n        </td>               \\n      </tr>\\n  </table>\\n  \\n</div>\\n\"","module.exports = \"<app-guest></app-guest>\\n<br>\\n<h3>Reservations:</h3>\\n<div>\\n  <button (click)=\\\"sortLow()\\\">Sort by the lowest price</button>\\n  <button (click)=\\\"sortHigh()\\\">Sort by the highest price</button>\\n</div>\\n\\n<div >\\n  <table >\\n      <tr *ngFor=\\\"let reservation of FiltredReservations\\\">\\n        <td align=\\\"1\\\">\\n          <p class=\\\"p-table-home\\\"> <i>Stauts: </i> {{reservation.Stauts}} , <i>Sing Up Date: </i> {{reservation.SingUpDate}} ,  \\n            <i>Number Of Nights :</i>{{reservation.NumberOfNights}}<i>, Total Price :</i>{{reservation.TotalPrice}},\\n             Host : {{reservation.HostUserName}}\\n            <br>\\n            <b>Apartment : </b>\\n            <br>\\n            {{reservation.ApartmentStreat}} {{reservation.ApartmentStreatNumber}},\\n            {{reservation.ApartmentSettlement}} {{reservation.ApartmentZipCode}}\\n\\n          </p>           \\n        </td>               \\n      </tr>\\n  </table>\\n  \\n</div>\\n\"","module.exports = \"<app-loged-user></app-loged-user>\\n<a href=\\\"guest/apartments\\\" >Apartments </a>\\n<a href=\\\"guest/reservations\\\" >Reservations </a>\\n<a href=\\\"guest/requests\\\">Requests</a>\\n\"","module.exports = \"<button (click) = \\\"returnBack()\\\"> < Back</button>\\n<div  class=\\\"normal-form\\\">\\n  <form [formGroup]=\\\"editForm\\\" >\\n    <table>\\n      <tr>\\n        <td colspan=\\\"2\\\" align=\\\"center\\\">\\n          <h2>Selected apartment:</h2>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Type:\\n        </td>\\n        <td>\\n          <input type=\\\"text\\\" formControlName=\\\"Type\\\" readonly>           \\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Room Number:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" min=1 formControlName=\\\"RoomNumber\\\" required readonly>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Guest Number:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" min=1 formControlName=\\\"GuestNumber\\\" required readonly>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Price Per Night:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"PricePerNight\\\" required readonly>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Sing Up Time:\\n        </td>\\n        <td>\\n          <input type=\\\"time\\\" formControlName=\\\"SingUpTime\\\" required readonly>          \\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Sing Out Time:\\n        </td>\\n        <td>\\n          <input type=\\\"time\\\" formControlName=\\\"SingOutTime\\\" required readonly>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Status:\\n        </td>\\n        <td>\\n          <input type=\\\"text\\\" formControlName=\\\"Status\\\" readonly>            \\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Latitude:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"Latitude\\\" required readonly>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Longitude:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"Longitude\\\" required readonly>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Streat:\\n        </td>\\n        <td>\\n          <input type=\\\"text\\\" formControlName=\\\"Streat\\\" required readonly>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Streat Number:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"StreatNumber\\\" required readonly>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Settlement:\\n        </td>\\n        <td>\\n          <input type=\\\"text\\\" formControlName=\\\"Settlement\\\" required readonly>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Zip Code:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"ZipCode\\\" required readonly>\\n        </td>\\n      </tr>            \\n    </table>\\n  </form>\\n</div>\\n<br>\\n<!--Pictures-->\\n<div style=\\\"overflow-x: scroll; height: 600px; width: 90%;\\\" >\\n    <table>\\n      <tr align=\\\"center\\\">\\n        <b>Apartment pictures : </b>\\n      </tr>\\n      <tr>\\n        <td *ngFor=\\\"let picture of apartment.Pictures; let i = index\\\">\\n          <img id=\\\"{{picture}}\\\" src=\\\"{{picture}}\\\" width=\\\"500px\\\" height=\\\"500px\\\"  />\\n        </td>\\n      </tr>\\n    </table>\\n  </div>\\n\\n<!--Amenities-->\\n<div>\\n  <table >\\n    <tr>\\n      <td>\\n        Apartment Amenities:\\n      </td>\\n    </tr>\\n    <tr *ngFor=\\\"let amenitie of amNames\\\">\\n      <td >\\n        <b>{{amenitie}}</b> ;  \\n      </td>\\n    </tr>\\n  </table>\\n</div>\\n<br>\\n<!--Map with location-->\\n\\n<h4>Comments:</h4>\\n<!--Comments-->\\n<div>\\n  <table *ngFor=\\\"let comment of apartmentComments\\\" class=\\\"comment-table\\\">\\n    <tr>\\n      <td align=\\\"*\\\">\\n        <p><b>{{comment.UserName}}: </b> <i> {{comment.Rate}}*   </i></p>  \\n        <p class=\\\"p-table-home\\\">  {{comment.Text}} </p> \\n      </td>      \\n    </tr>\\n    \\n  </table>\\n</div>\"","module.exports = \"<div>\\n  <button class=\\\"login-button\\\" (click)=\\\"logIn()\\\">Log in</button>\\n</div>\\n\\n<h1>Airbnb home page</h1>\\n\\n<!--Search-->\\n<div>\\n  <form [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"onSearch()\\\">\\n    <table>\\n      <tr>\\n        <td>\\n          WHERE: \\n        </td>\\n        <td>\\n          <input type=\\\"text\\\" formControlName=\\\"settlement\\\">\\n        </td>\\n        <td>\\n          CHECK-IN: \\n        </td>\\n        <td>\\n          <input type=\\\"date\\\" formControlName=\\\"checkIn\\\">\\n        </td>\\n        <td>\\n          CHECKOUT: \\n        </td>\\n        <td>\\n          <input type=\\\"date\\\" formControlName=\\\"checkOut\\\">\\n        </td>\\n        <td>\\n          GUEST NUMBER: \\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"guestNumber\\\" min=\\\"1\\\">\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n         MINIMUM ROOMS: \\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"minRooms\\\" min=\\\"1\\\">\\n        </td>\\n        <td>\\n          MAXIMUM ROOMS: \\n         </td>\\n         <td>\\n           <input type=\\\"number\\\" formControlName=\\\"maxRooms\\\" min=\\\"1\\\">\\n         </td>\\n         <td>\\n          MAXIMUM PRICE: \\n         </td>\\n         <td>\\n           <input type=\\\"number\\\" formControlName=\\\"maxPrice\\\" min=\\\"1\\\">\\n         </td>\\n         <td>\\n          TYPE: \\n         </td>\\n         <td>\\n          <select formControlName=\\\"apartmentType\\\">\\n            <option *ngFor=\\\"let type of ApartmentType\\\" >{{type}}</option> \\n          </select>\\n        </td>       \\n      </tr>\\n\\n      <tr>\\n        <td>\\n          Amenities: \\n        </td>\\n        <td colspan=\\\"6\\\">\\n          <label formArrayName=\\\"amNames\\\" *ngFor=\\\"let name of searchForm.controls.amNames.controls; let i = index\\\">\\n            <input type=\\\"checkbox\\\" [formControlName]=\\\"i\\\">\\n            {{amNames[i]}}  \\n          </label>\\n        </td>      \\n        <td align=\\\"2\\\" >\\n          <button type=\\\"submit\\\" >Search</button>\\n        </td>\\n      </tr>\\n    </table>\\n  </form>\\n</div>\\n<br><br>\\n<!--Active-->\\n<h3>Active Apartments:</h3>\\n<div>\\n  <button (click)=\\\"reset()\\\">Show all</button>\\n  <button (click)=\\\"sortLow()\\\">Sort by the lowest price</button>\\n  <button (click)=\\\"sortHigh()\\\">Sort by the highest price</button>\\n</div>\\n\\n<div >\\n  <table >\\n      <tr *ngFor=\\\"let apartment of FiltredApartments\\\">\\n        <td align=\\\"1\\\">\\n          <p class=\\\"p-table-home\\\"> <i>Apartment type:</i> {{apartment.Type}} , <i>Number of rooms:</i> {{apartment.RoomNumber}} ,  \\n            <i>Guest Number :</i>{{apartment.GuestNumber}}<i>, Price per nigth :</i>{{apartment.PricePerNight}},\\n            <i>Settlement :</i>{{apartment.Settlement}}\\n\\n          </p>           \\n        </td>\\n        <td align=\\\"3\\\">\\n            <img src=\\\"{{apartment.Pictures[0]}}\\\" alt=\\\"No pictures available\\\" height=\\\"100px\\\" width=\\\"150px\\\"/>\\n        </td>\\n        <td align=\\\"1\\\">\\n          <button id=\\\"{{apartment.ID}}\\\" (click)=\\\"moreDetails(apartment.ID)\\\" >More details</button>\\n        </td>\\n      </tr>\\n  </table>\\n  \\n</div>\\n\\n\\n\"","module.exports = \"<button (click) = \\\"returnBack()\\\"> < Back</button>\\n<div  class=\\\"login-form\\\">\\n  <form [formGroup]=\\\"editForm\\\" >\\n    <table>\\n      <tr>\\n        <td colspan=\\\"2\\\" align=\\\"center\\\">\\n          <h2>Edit apartment</h2>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Type:\\n        </td>\\n        <td>\\n          <select formControlName=\\\"Type\\\">\\n            <option *ngFor=\\\"let type of apartmentTypes\\\" [value]=\\\"type\\\">{{type}}</option>\\n          </select>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Room Number:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" min=1 formControlName=\\\"RoomNumber\\\" required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Guest Number:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" min=1 formControlName=\\\"GuestNumber\\\" required >\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Price Per Night:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"PricePerNight\\\" required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Sing Up Time:\\n        </td>\\n        <td>\\n          <input type=\\\"time\\\" formControlName=\\\"SingUpTime\\\" required>          \\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Sing Out Time:\\n        </td>\\n        <td>\\n          <input type=\\\"time\\\" formControlName=\\\"SingOutTime\\\" required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Status:\\n        </td>\\n        <td>\\n          <select formControlName=\\\"Status\\\">\\n            <option *ngFor=\\\"let status of apartmentStatus\\\" [value]=\\\"status\\\">{{status}}</option>\\n          </select>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Latitude:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"Latitude\\\" required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Longitude:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"Longitude\\\" required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Streat:\\n        </td>\\n        <td>\\n          <input type=\\\"text\\\" formControlName=\\\"Streat\\\" required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Streat Number:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"StreatNumber\\\" required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Settlement:\\n        </td>\\n        <td>\\n          <input type=\\\"text\\\" formControlName=\\\"Settlement\\\" required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Zip Code:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"ZipCode\\\" required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td colspan=\\\"2\\\">\\n          <label formArrayName=\\\"amNames\\\" *ngFor=\\\"let name of editForm.controls.amNames.controls; let i = index\\\">\\n            <input type=\\\"checkbox\\\" [formControlName]=\\\"i\\\">\\n            {{amNames[i]}}\\n            <br>\\n          </label>\\n        </td>\\n      </tr>\\n      \\n\\n      <tr>\\n        <td colspan=\\\"1\\\" align=\\\"right\\\">\\n          <button (click)=\\\"onChange()\\\" class=\\\"registerbtn\\\"  [disabled]=\\\"editForm.invalid\\\">Change</button>\\n        </td>\\n        <td colspan=\\\"1\\\" align=\\\"right\\\">\\n          <button (click)=\\\"onDelete()\\\" class=\\\"deletebtn\\\"  >Delete</button>\\n        </td>\\n      </tr>\\n    </table>\\n  </form>\\n</div>\\n\\n<div style=\\\"overflow-x: scroll; height: 600px; width: 90%;\\\">\\n  <table>\\n    <tr align=\\\"center\\\">\\n      <b>Click on the picture to delete it : </b>\\n    </tr>\\n    <tr>\\n      <td *ngFor=\\\"let picture of apartment.Pictures; let i = index\\\">\\n        <img id=\\\"{{picture}}\\\" src=\\\"{{picture}}\\\" width=\\\"500px\\\" height=\\\"500px\\\" (click)=\\\"deletePicture($event)\\\" />\\n      </td>\\n    </tr>\\n    <tr colspan=\\\"*\\\" align=\\\"left\\\">\\n      <button (click)=\\\"addNewPicutres()\\\">Add new picture</button>\\n    </tr>\\n  </table>\\n</div>\\n\\n<div>\\n  <table *ngFor=\\\"let comment of apartmentComments\\\" class=\\\"comment-table\\\">\\n    <tr>\\n      <td align=\\\"*\\\">\\n        <p><b>{{comment.UserName}}: </b> <i> {{comment.Rate}}*   </i></p>  \\n\\n        <p class=\\\"p-table-home\\\">  {{comment.Text}} </p> \\n        <p>Blocked: {{comment.Blocked}} </p>\\n        <button id=\\\"{{comment.Id}}\\\" (click)=\\\"chageComment($event)\\\" >Change status</button>\\n      </td>\\n      \\n    </tr>\\n    \\n  </table>\\n</div>\\n\\n<!--Rent Dates-->\\n<br>\\n<h4>Rent Dates: </h4>\\n\\n<form [formGroup]=\\\"rentDateForm\\\" (ngSubmit)=\\\"addRentDate()\\\">\\n  <table>\\n    <tr>\\n      <td align=\\\"2\\\">\\n        <input type=\\\"date\\\" formControlName=\\\"rentDate\\\">\\n      </td>\\n      <td >\\n        <button type=\\\"submit\\\" >Add Date </button>\\n      </td>\\n    </tr>\\n  </table>\\n</form>\\n\\n<div>\\n<table>\\n  <tr *ngFor=\\\"let rentDate of apartmentDates\\\">\\n    <td align=\\\"2\\\">\\n      <p><i> {{rentDate.CheckedDate.split('T')[0]}}; </i></p>\\n    </td>\\n    <td >\\n      <button id=\\\"{{rentDate.ID}}\\\" (click)=\\\"deleteRentDate(rentDate.ID)\\\">Delete</button>\\n    </td>\\n  </tr>\\n</table>\\n</div>\"","module.exports = \"<app-host></app-host>\\n<br><br><br>\\n\\n<!--Search-->\\n<div>\\n  <form [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"onSearch()\\\">\\n    <table>\\n      <tr>\\n        <td>\\n          WHERE: \\n        </td>\\n        <td>\\n          <input type=\\\"text\\\" formControlName=\\\"settlement\\\">\\n        </td>\\n        <td>\\n          CHECK-IN: \\n        </td>\\n        <td>\\n          <input type=\\\"date\\\" formControlName=\\\"checkIn\\\">\\n        </td>\\n        <td>\\n          CHECKOUT: \\n        </td>\\n        <td>\\n          <input type=\\\"date\\\" formControlName=\\\"checkOut\\\">\\n        </td>\\n        <td>\\n          GUEST NUMBER: \\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"guestNumber\\\" min=\\\"1\\\">\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n         MINIMUM ROOMS: \\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"minRooms\\\" min=\\\"1\\\">\\n        </td>\\n        <td>\\n          MAXIMUM ROOMS: \\n         </td>\\n         <td>\\n           <input type=\\\"number\\\" formControlName=\\\"maxRooms\\\" min=\\\"1\\\">\\n         </td>\\n         <td>\\n          MAXIMUM PRICE: \\n         </td>\\n         <td>\\n           <input type=\\\"number\\\" formControlName=\\\"maxPrice\\\" min=\\\"1\\\">\\n         </td>\\n         <td>\\n          TYPE: \\n         </td>\\n         <td>\\n          <select formControlName=\\\"apartmentType\\\">\\n            <option *ngFor=\\\"let type of ApartmentType\\\" >{{type}}</option> \\n          </select>\\n        </td>       \\n      </tr>\\n\\n      <tr>\\n        <td>\\n          STATUS: \\n         </td>\\n         <td>\\n          <select formControlName=\\\"apartmentStatus\\\">\\n            <option *ngFor=\\\"let status of ApartmentStatus\\\" >{{status}}</option> \\n          </select>\\n        </td>  \\n\\n        <td>\\n          Amenities: \\n        </td>\\n        <td colspan=\\\"6\\\">\\n          <label formArrayName=\\\"amNames\\\" *ngFor=\\\"let name of searchForm.controls.amNames.controls; let i = index\\\">\\n            <input type=\\\"checkbox\\\" [formControlName]=\\\"i\\\">\\n            {{amNames[i]}}  \\n          </label>\\n        </td>      \\n        <td align=\\\"2\\\" >\\n          <button type=\\\"submit\\\" >Search</button>\\n        </td>\\n      </tr>\\n    </table>\\n  </form>\\n</div>\\n<br><br>\\n\\n<h3>Apartments:</h3>\\n<div>\\n  <button (click)=\\\"reset()\\\">Show all</button>\\n  <button (click)=\\\"sortLow()\\\">Sort by the lowest price</button>\\n  <button (click)=\\\"sortHigh()\\\">Sort by the highest price</button>\\n</div>\\n\\n<div >\\n  <table >\\n      <tr *ngFor=\\\"let apartment of FiltredApartments\\\">\\n        <td align=\\\"1\\\">\\n          <p class=\\\"p-table-home\\\"> <i>Apartment type:</i> {{apartment.Type}} , <i>Number of rooms:</i> {{apartment.RoomNumber}} ,  \\n            <i>Guest Number :</i>{{apartment.GuestNumber}}<i>, Price per nigth :</i>{{apartment.PricePerNight}},\\n            <i>Settlement :</i>{{apartment.Settlement}}\\n\\n          </p>           \\n        </td>\\n        <td align=\\\"3\\\">\\n          <ng-container *ngIf=\\\"apartment.Pictures \\\">\\n            <img src=\\\"{{apartment.Pictures[0]}}\\\" alt=\\\"No pictures available\\\" height=\\\"100px\\\" width=\\\"100px\\\"/>\\n          </ng-container>\\n            \\n        </td>\\n        <td align=\\\"1\\\">\\n          <button id=\\\"{{apartment.ID}}\\\" (click)=\\\"editApartment(apartment.ID)\\\" >Edit Apartment</button>\\n        </td>\\n        \\n      </tr>\\n  </table>\\n  \\n</div>\\n\"","module.exports = \"<app-host></app-host>\\n<br>\\n\\n<div  class=\\\"login-form\\\">\\n  <form [formGroup]=\\\"addForm\\\" (ngSubmit)=\\\"createApartment()\\\">\\n    <table>\\n      <tr>\\n        <td colspan=\\\"2\\\" align=\\\"center\\\">\\n          <h2>Add apartment</h2>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Type:\\n        </td>\\n        <td>\\n          <select formControlName=\\\"Type\\\">\\n            <option *ngFor=\\\"let type of apartmentTypes\\\" [value]=\\\"type\\\">{{type}}</option>\\n          </select>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Room Number:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" min=1 formControlName=\\\"RoomNumber\\\" required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Guest Number:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" min=1 formControlName=\\\"GuestNumber\\\" required >\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Price Per Night:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"PricePerNight\\\" required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Sing Up Time:\\n        </td>\\n        <td>\\n          <input type=\\\"time\\\" formControlName=\\\"SingUpTime\\\" required>          \\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Sing Out Time:\\n        </td>\\n        <td>\\n          <input type=\\\"time\\\" formControlName=\\\"SingOutTime\\\" required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Latitude:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"Latitude\\\" required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Longitude:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"Longitude\\\" required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Streat:\\n        </td>\\n        <td>\\n          <input type=\\\"text\\\" formControlName=\\\"Streat\\\" required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Streat Number:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"StreatNumber\\\" required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Settlement:\\n        </td>\\n        <td>\\n          <input type=\\\"text\\\" formControlName=\\\"Settlement\\\" required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Zip Code:\\n        </td>\\n        <td>\\n          <input type=\\\"number\\\" formControlName=\\\"ZipCode\\\" required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Amenities:\\n        </td>\\n      </tr>\\n      <tr>\\n        <td colspan=\\\"2\\\">\\n          <label formArrayName=\\\"amNames\\\" *ngFor=\\\"let name of addForm.controls.amNames.controls; let i = index\\\">\\n            <input type=\\\"checkbox\\\" [formControlName]=\\\"i\\\">\\n            {{amNames[i]}}\\n            <br>\\n          </label>\\n        </td>\\n      </tr>\\n      \\n      <tr>\\n        <td colspan=\\\"2\\\" align=\\\"center\\\">\\n          <button type=\\\"submit\\\" class=\\\"registerbtn\\\"  [disabled]=\\\"addForm.invalid\\\">Add apartment</button>\\n        </td>\\n      </tr>\\n    </table>\\n  </form>\\n</div>\"","module.exports = \"<app-host></app-host>\\n<br>\\n\\n<h3>Reservation Requests:</h3>\\n\\n<div >\\n  <table >\\n      <tr *ngFor=\\\"let reservation of createdReservations\\\">\\n        <td align=\\\"1\\\">\\n          <p class=\\\"p-table-home\\\"> <i>Stauts: </i> {{reservation.Stauts}} , <i>Sing Up Date: </i> {{reservation.SingUpDate}} ,  \\n            <i>Number Of Nights :</i>{{reservation.NumberOfNights}}<i>, Total Price :</i>{{reservation.TotalPrice}},\\n            <i>Guest : </i>{{reservation.GuestUserName}},<i>Host : </i>{{reservation.HostUserName}}\\n            <br>\\n            <b>Apartment : </b>\\n            <br>\\n            {{reservation.ApartmentStreat}} {{reservation.ApartmentStreatNumber}},\\n            {{reservation.ApartmentSettlement}} {{reservation.ApartmentZipCode}}\\n\\n          </p>           \\n        </td> \\n        <td align=\\\"1\\\">\\n          <button id=\\\"{{reservation.ID}}\\\"  (click)=\\\"acceptRequest($event)\\\" >Accept</button>         \\n        </td>\\n        <td align=\\\"1\\\">            \\n            <button id=\\\"{{reservation.ID}}\\\"  (click)=\\\"rejectRequest($event)\\\">Reject</button>\\n          </td>                \\n      </tr>\\n  </table>\\n  \\n</div>\\n\\n<br>\\n\\n<h3>Accepted Reservations:</h3>\\n\\n<div >\\n  <table >\\n      <tr *ngFor=\\\"let reservation of acceptedReservations\\\">\\n        <td align=\\\"1\\\">\\n          <p class=\\\"p-table-home\\\"> <i>Stauts: </i> {{reservation.Stauts}} , <i>Sing Up Date: </i> {{reservation.SingUpDate}} ,  \\n            <i>Number Of Nights :</i>{{reservation.NumberOfNights}}<i>, Total Price :</i>{{reservation.TotalPrice}},\\n            <i>Guest : </i>{{reservation.GuestUserName}},<i>Host : </i>{{reservation.HostUserName}}\\n            <br>\\n            <b>Apartment : </b>\\n            <br>\\n            {{reservation.ApartmentStreat}} {{reservation.ApartmentStreatNumber}},\\n            {{reservation.ApartmentSettlement}} {{reservation.ApartmentZipCode}}\\n\\n          </p>           \\n        </td>\\n        <td>\\n          <button id=\\\"{{reservation.ID}}\\\" (click)=\\\"rejectRequest($event)\\\">Reject</button>\\n        </td>               \\n      </tr>\\n  </table>\\n  \\n</div>\\n\"","module.exports = \"<app-host></app-host>\\n<br><br><br>\\n\\n<!--Search-->\\n<div>\\n  <form [formGroup]=\\\"searchForm\\\" (ngSubmit)=\\\"onSearch()\\\">\\n    <table>\\n      <tr>\\n        <td>\\n          USERNAME: \\n        </td>\\n        <td>\\n          <input type=\\\"text\\\" formControlName=\\\"guestUsername\\\">\\n        </td>\\n        <td>\\n          STATUS: \\n         </td>\\n         <td>\\n          <select formControlName=\\\"reservationStatus\\\">\\n            <option *ngFor=\\\"let status of ReservationStatus\\\" >{{status}}</option> \\n          </select>\\n        </td> \\n        <td align=\\\"2\\\" >\\n          <button type=\\\"submit\\\" >Search</button>\\n        </td>\\n      </tr>\\n    </table>\\n  </form>\\n</div>\\n\\n<h3>Reservations:</h3>\\n<div>\\n  <button (click)=\\\"reset()\\\">Show all</button>\\n  <button (click)=\\\"sortLow()\\\">Sort by the lowest price</button>\\n  <button (click)=\\\"sortHigh()\\\">Sort by the highest price</button>\\n</div>\\n\\n<div >\\n  <table >\\n      <tr *ngFor=\\\"let reservation of FiltredReservations\\\">\\n        <td align=\\\"1\\\">\\n          <p class=\\\"p-table-home\\\"> <i>Stauts: </i> {{reservation.Stauts}} , <i>Sing Up Date: </i> {{reservation.SingUpDate}} ,  \\n            <i>Number Of Nights :</i>{{reservation.NumberOfNights}}<i>, Total Price :</i>{{reservation.TotalPrice}},\\n            <i>Guest : </i>{{reservation.GuestUserName}},<i>Host : </i>{{reservation.HostUserName}}\\n            <br>\\n            <b>Apartment : </b>\\n            <br>\\n            {{reservation.ApartmentStreat}} {{reservation.ApartmentStreatNumber}},\\n            {{reservation.ApartmentSettlement}} {{reservation.ApartmentZipCode}}\\n\\n          </p>           \\n        </td>               \\n      </tr>\\n  </table>\\n  \\n</div>\\n\"","module.exports = \"<br><br><br>\\n<table>\\n  <tr>\\n    <td colspan=\\\"2\\\" align=\\\"center\\\">\\n      <h2>Please select document image</h2>\\n    </td>\\n  </tr>\\n  <tr *ngIf=\\\"url\\\">\\n    <td colspan=\\\"2\\\" align=\\\"center\\\">\\n      <img [src]=\\\"url\\\" height=\\\"200\\\">\\n    </td>\\n  </tr>\\n  <tr>\\n    <td>\\n      <button  (click)=\\\"onDone()\\\">Done</button>\\n    </td>\\n    <td align=\\\"right\\\">\\n      <input type=\\\"file\\\" id=\\\"selectedFile\\\"  (change)=\\\"onSelectFile($event)\\\" accept=\\\"image/*\\\" />\\n      &nbsp;\\n      <button  (click)=\\\"onConfirm()\\\">Confirm</button>\\n    </td>\\n  </tr>\\n</table>\"","module.exports = \"<app-loged-user></app-loged-user>\\n<nav>\\n<a href=\\\"host/createapartment\\\" >Create Apartment </a>\\n  <a href=\\\"host/apartments\\\" >Apartments </a>\\n  <a href=\\\"host/reservations\\\" >Reservations </a>\\n  <a href=\\\"host/requests\\\" >Requests</a>\\n</nav>\"","module.exports = \"<body class=\\\"login-body\\\" >\\n    <div class=\\\"login-form\\\">\\n     <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\" >\\n        <table>\\n            <tr>\\n                <td colspan=\\\"2\\\" align=\\\"center\\\">\\n                    <h2>Login</h2>\\n                </td>\\n            </tr>\\n            <tr>\\n                <td colspan=\\\"2\\\" align=\\\"center\\\">\\n                    <input type=\\\"text\\\" formControlName=\\\"username\\\" required placeholder=\\\"username\\\">\\n                </td>\\n            </tr>\\n            <tr>\\n                <td colspan=\\\"2\\\" align=\\\"center\\\">\\n                    <input type=\\\"password\\\" formControlName=\\\"password\\\" required placeholder=\\\"password\\\">\\n                </td>\\n            </tr>\\n            <tr>\\n                <td colspan=\\\"2\\\" align=\\\"right\\\">\\n                    <button class=\\\"registerbtn\\\" type=\\\"submit\\\"  [disabled]=\\\"loginForm.invalid\\\">Login</button>\\n                </td>\\n            </tr>\\n        </table>\\n    </form> \\n    <a href=\\\"register\\\" class=\\\"link-login-style\\\">Create your Account </a>\\n</div>\\n</body>\\n    \"","module.exports = \"<nav>\\n<button class=\\\"chageProfile-button\\\" (click)=\\\"changeProfil()\\\">Profile</button>\\n<button class=\\\"login-button\\\" (click)=\\\"logOut()\\\">Log out</button>\\n</nav>\"","module.exports = \"<button (click) = \\\"returnBack()\\\"> < Back</button>\\n<div class=\\\"login-form\\\">\\n  <form [formGroup]=\\\"userForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <table>\\n        <tr>\\n            <td colspan=\\\"2\\\" align=\\\"center\\\">\\n              <h2>Profile</h2>\\n            </td>\\n          </tr>\\n        <tr>\\n          <td>\\n            Role:\\n          </td>\\n          <td>\\n            <input type=\\\"text\\\" formControlName=\\\"role\\\" readonly required>\\n          </td>\\n        </tr>\\n      <tr>\\n        <td>\\n          Name:\\n        </td>\\n        <td>\\n          <input type=\\\"text\\\" formControlName=\\\"name\\\" required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Surname:\\n        </td>\\n        <td>\\n          <input type=\\\"text\\\" formControlName=\\\"surname\\\" required>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Gender:\\n        </td>\\n        <td>\\n          <select formControlName=\\\"gender\\\">\\n              <option *ngFor=\\\"let gender of genders\\\" [value]=\\\"gender\\\">{{gender}}</option> \\n            </select>\\n        </td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Username:\\n        </td>\\n        <td>\\n          <input type=\\\"text\\\" formControlName=\\\"username\\\" required>\\n        </td>\\n      </tr>\\n      \\n        <tr>\\n          <td colspan=\\\"2\\\" align=\\\"right\\\">\\n            <button type=\\\"submit\\\" class=\\\"registerbtn\\\"  [disabled]=\\\"userForm.invalid\\\">Change profile</button>\\n          </td>\\n        </tr>\\n    </table>\\n  </form>\\n</div>\\n\\n<div class=\\\"login-form\\\">\\n  <form [formGroup]=\\\"passForm\\\" (ngSubmit)=\\\"onChange()\\\">\\n    <table>\\n        <tr>\\n            <td colspan=\\\"2\\\" align=\\\"center\\\">\\n              <h2>Change Password</h2>\\n            </td>\\n          </tr>\\n        <tr>\\n            <td>\\n              New Password:\\n            </td>\\n            <td>\\n              <input type=\\\"password\\\" formControlName=\\\"password\\\" required>\\n            </td>\\n          </tr>\\n          <tr>\\n            <td>\\n              Confirm Password:\\n            </td>\\n            <td>\\n              <input type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" required>\\n              <br />\\n              <font *ngIf=\\\"invalidPass\\\" color=\\\"red\\\" size=\\\"2\\\">\\n              Passwords must be equal\\n              </font> \\n            </td>\\n          </tr>\\n          <tr>\\n              <td colspan=\\\"2\\\" align=\\\"right\\\">\\n                <button type=\\\"submit\\\" class=\\\"registerbtn\\\"  [disabled]=\\\"passForm.invalid\\\">Change password</button>\\n              </td>\\n            </tr>\\n    </table>\\n  </form>\\n</div>\\n\"","module.exports = \"<div class=\\\"login-form\\\">\\n<form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <table>\\n    <tr>\\n      <td colspan=\\\"2\\\" align=\\\"center\\\">\\n        <h2>Create host</h2>\\n      </td>\\n    </tr>\\n    <tr>\\n      <td>\\n        Name:\\n      </td>\\n      <td>\\n        <input type=\\\"text\\\" formControlName=\\\"name\\\" required>\\n      </td>\\n    </tr>\\n    <tr>\\n      <td>\\n        Surname:\\n      </td>\\n      <td>\\n        <input type=\\\"text\\\" formControlName=\\\"surname\\\" required>\\n      </td>\\n    </tr>\\n    <tr>\\n      <td>\\n        Username:\\n      </td>\\n      <td>\\n        <input type=\\\"text\\\" formControlName=\\\"username\\\" required >\\n      </td>\\n    </tr>\\n    <tr>\\n      <td>\\n        Password:\\n      </td>\\n      <td>\\n        <input type=\\\"password\\\" formControlName=\\\"password\\\" required>\\n      </td>\\n    </tr>\\n    <tr>\\n      <td>\\n        Confirm Password:\\n      </td>\\n      <td>\\n        <input type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" required>\\n        <br />\\n        <font *ngIf=\\\"invalidPass\\\" color=\\\"red\\\" size=\\\"2\\\">\\n        Passwords must be equal\\n        </font> \\n      </td>\\n    </tr>\\n    <tr>\\n      <td>\\n        Gender:\\n      </td>\\n      <td>\\n        <select formControlName=\\\"gender\\\">\\n          <option *ngFor=\\\"let gender of genders\\\" [value]=\\\"gender\\\">{{gender}}</option> \\n        </select>\\n      </td>\\n    </tr>\\n    <tr>\\n      <td colspan=\\\"2\\\" align=\\\"right\\\">\\n        <button type=\\\"submit\\\" class=\\\"registerbtn\\\"  [disabled]=\\\"registerForm.invalid\\\">Create host</button>\\n      </td>\\n    </tr>\\n  </table>\\n  <div>\\n    <p>Already have an account? <a href=\\\"login\\\" class=\\\"link-login-style\\\">Sign in</a>.</p>\\n  </div>\\n</form>\\n</div>\\n\"","export class Apartment {\r\n    \r\n    ID : number;\r\n    Type : string;\r\n    RoomNumber : number;\r\n    GuestNumber : number;\r\n    Pictures : Array<any>;\r\n    PricePerNight : number;\r\n    SingUpTime : any;\r\n    SingOutTime : any;\r\n    Status : string;\r\n\r\n    RentDates: Array<any>;\r\n\r\n    //coments:\r\n    CommentIDs : Array<number>;\r\n    //Amenities:\r\n    Amenities : Array<any>;\r\n    //Location info:\r\n    Latitude : number;\r\n    Longitude : number;\r\n    //Adress info:\r\n    Streat : string;\r\n    StreatNumber : number;\r\n    Settlement : string;\r\n    ZipCode : number;\r\n    //Host info:\r\n    HostID : number;\r\n    HostName : string;\r\n    HostSurname : string;\r\n}\r\n\r\nexport class SearchApartment {\r\n\r\n    Settlement: string;\r\n    CheckIn : any;\r\n    CheckOut: any;\r\n    GuestNumber: number;\r\n    MinRooms: number;\r\n    MaxRooms: number;\r\n    MaxPrice: number;\r\n    ApartmentType: string;\r\n    ApartmentStatus: string;\r\n    Amenities: Array<any>;\r\n    HostID : number;\r\n}\r\n\r\nexport class AddRentDate{\r\n    ApartmentID: number;\r\n    RentDate : any;\r\n}","export class DatesModelFirstAdd{\r\n    ApartmanID : any;\r\n    CheckedDates : any[];\r\n}\r\n\r\nexport class DateModelBM{\r\n    ID : any\r\n    ApartmanID : any;\r\n    CheckedDate : any;\r\n}","export class User {\r\n    ID : number;\r\n    Name : string;\r\n    Surname : string;\r\n    UserName : string;\r\n    Password : string;\r\n    Gender : any;\r\n    Role : any;\r\n    Blocked : boolean;\r\n\r\n}\r\n\r\nexport class RegistUser {\r\n    Name : string;\r\n    Surname : string;\r\n    Username : string;\r\n    Password : string;\r\n    Gender : string;\r\n\r\n    constructor(public name: string, public surname: string,public username: string, public pass: string , public gender:string ) {\r\n      this.Name = name;\r\n      this.Surname = surname;\r\n      this.Username = username;\r\n      this.Password = pass;\r\n      this.Gender = gender;\r\n    }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkZC1kYXRlcy9hZGQtZGF0ZXMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HostService } from '../host.service';\nimport { StorageService } from '../storage.service';\nimport { Observable } from 'rxjs';\nimport { DatesModelFirstAdd} from '../Classes/DateModel';\n\n@Component({\n  selector: 'app-add-dates',\n  templateUrl: './add-dates.component.html',\n  styleUrls: ['./add-dates.component.css']\n})\nexport class AddDatesComponent implements OnInit {\n\n  dateModel : DatesModelFirstAdd;\n  addForm : any;\n  constructor(private hostService: HostService,private fb: FormBuilder,private router: Router, private storageService: StorageService) { }\n\n  ngOnInit() {\n    this.dateModel = new DatesModelFirstAdd();\n    this.dateModel.ApartmanID = this.storageService.getApartmentID();\n    this.dateModel.CheckedDates  = [];\n\n    this.addForm = this.fb.group({\n      date: [\"\" ,Validators.required]\n    });\n  }\n\n  onAdd()\n  {\n    this.dateModel.CheckedDates.push(this.addForm.value.date);\n    alert(\"Date vas added\");\n  }\n\n  onDone()\n  {\n    this.hostService.addDates(this.dateModel).subscribe(data=> {\n      this.storageService.setApartmentID(this.dateModel.ApartmanID);\n      this.router.navigate(['host/apartments/pictures']);\n    });\n    \n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable,throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n\n  private userUri = \"http://localhost:8080/api/Users/\";\n  private apartmentUri = \"http://localhost:8080/api/Apartment/\";\n  private reservationUri = \"http://localhost:8080/api/Reservation/\";\n  private amenitieUri = \"http://localhost:8080/api/Amenitie/\";\n  \n\n  constructor(private http: HttpClient) { }\n\n  SearchUsers(userRole : any ,userGender : any , username : any) : Observable<any>\n  {   \n     const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Role' : localStorage.Role }),\n      params: new HttpParams().set('userRole' , userRole).set('userGender' , userGender).set('username' , username)\n     };\n\n    return this.http.get(this.userUri+\"SearchUsers\",httpOptions).pipe(\n      catchError(e => throwError(console.error(\"Eror in admin service:  \" + e.error.Message)))\n    );\n\n  }\n\n  getAllUsers() : Observable<any>\n  {    \n     const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' , 'Role' : localStorage.Role}),\n      \n     };\n\n    return this.http.get(this.userUri+\"GetUsers\",httpOptions).pipe(\n      catchError(e => throwError(console.error(\"Eror in admin service:  \" + e.error.Message)))\n    );\n  }\n  getAllReservations()\n  {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Role' : localStorage.Role }), \n      \n     };\n\n    return this.http.get(this.reservationUri+\"GetAllReservations\",httpOptions).pipe(\n      catchError(e => throwError(console.error(\"Eror in admin service:  \" + e.error.Message)))\n    );\n  }\n\n  getAllApartments() : Observable<any>\n  {   \n     const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Role' : localStorage.Role }),\n\n      \n     };\n\n    return this.http.get(this.apartmentUri+\"GetAllApartments\",httpOptions).pipe(\n      catchError(e => throwError(console.error(\"Eror in admin service:  \" + e.error.Message)))\n    );\n\n  }\n\n  getCommentsForApartment(apartmentID : any) : Observable<any>\n  {   \n     const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Role' : localStorage.Role }),\n      params: new HttpParams().set('apartmentID' , apartmentID)\n     };\n\n    return this.http.get(this.apartmentUri+\"GetAllCommentsForApartment\",httpOptions).pipe(\n      catchError(e => throwError(console.error(\"Eror in admin service:  \" + e.error.Message)))\n    );\n\n  }\n\n  changeApartment(apartment : any) : any\n  {   \n     const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Role' : localStorage.Role }),\n\n     };\n\n    return this.http.patch(this.apartmentUri+\"ChangeApartment\",apartment,httpOptions).pipe(\n      catchError(e => throwError(console.error(\"Eror in admin service:  \" + e.error.Message)))\n    );\n\n  }\n\n  changeUserStatus(id : any) : any\n  {   \n     const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Role' : localStorage.Role }),\n     };\n\n    return this.http.patch(this.userUri+\"ChangeUserStatus\",id,httpOptions).pipe(\n      catchError(e => throwError(console.error(\"Eror in admin service:  \" + e.error.Message)))\n    );\n\n  }\n\n  deleteApartmentComment(commentId : any) : any\n  {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Role' : localStorage.Role }),\n      params: new HttpParams().set('commentId' , commentId)\n     };\n\n     return this.http.delete(this.apartmentUri+\"DeleteApartmentComment\",httpOptions).pipe(\n      catchError(e => throwError(console.error(\"Eror in admin service:  \" + e.error.Message)))\n    );;\n  }\n\n  deleteApartment(apartmentId : any) : any\n  {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Role' : localStorage.Role }),\n      params: new HttpParams().set('apartmentId' , apartmentId)\n     };\n\n     return this.http.delete(this.apartmentUri+\"DeleteApartment\",httpOptions).pipe(\n      catchError(e => throwError(console.error(\"Eror in admin service:  \" + e.error.Message)))\n    );;\n  }\n\n  CreateHost(user : any) : any\n  {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' , 'Role' : localStorage.Role}),\n     };\n\n    return this.http.put(this.userUri+\"CreateHost\",user,httpOptions).pipe(\n      catchError(e => throwError(console.error(\"Eror in admin service:  \" + e.error.Message)))\n    );\n  }\n\n  GetAllAmenities() : Observable<any>\n  {   \n     const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' , 'Role' : localStorage.Role}),\n         \n     };\n\n    return this.http.get(this.amenitieUri+\"GetAllAmenities\",httpOptions).pipe(\n      catchError(e => throwError(alert(\"Eror in admin service:  \" + e.error.Message)))\n    );\n\n  }\n\n  DeleteAmenitie(amenitieId: any) : any\n  {   \n     const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Role' : localStorage.Role }),\n      params: new HttpParams().set('amenitieId' , amenitieId)     \n     };\n\n    return this.http.delete(this.amenitieUri+\"DeleteAmenitie\",httpOptions).pipe(\n      catchError(e => throwError(alert(\"Eror in admin service:  \" + e.error.Message)))\n    );\n\n  }\n\n  AddAmenitie(amenitieName: string) : any\n  {   \n     const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' , 'Role' : localStorage.Role}),\n      params: new HttpParams().set('amenitieName' , amenitieName)      \n     };\n\n    return this.http.delete(this.amenitieUri+\"AddAmenitie\",httpOptions).pipe(\n      catchError(e => throwError(alert(\"Eror in admin service:  \" + e.error.Message)))\n    );\n\n  }\n\n  GetSearchApartments(apartmentDetails : any) : Observable<any>\n  {\n    const httpOptions = {\n     headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Role' : localStorage.Role}),\n     // params: new HttpParams().set('apartmentDetails' , apartmentDetails)     \n     };\n\n    return this.http.put(this.apartmentUri+\"GetSearchApartments\",apartmentDetails,httpOptions).pipe(\n      catchError(e => throwError(alert(\"Eror in home service:  \" + e.error.Message)))\n    );\n  }\n\n  GetSearchReservations(username : any, status : any ): Observable<any>\n  {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Role' : localStorage.Role}),\n      params: new HttpParams().set('username' , username).set('status' , status)     \n      };\n \n     return this.http.get(this.reservationUri+\"GetSearchReservations\",httpOptions).pipe(\n       catchError(e => throwError(alert(\"Eror in host service:  \" + e.error.Message)))\n     );\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL0FkbWluU3R1ZmYvYW1lbml0aWUvYW1lbml0aWUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/admin.service';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport {Amenitie} from '../../../Classes/Amenitie'\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-amenitie',\n  templateUrl: './amenitie.component.html',\n  styleUrls: ['./amenitie.component.css']\n})\nexport class AmenitieComponent implements OnInit {\n\n  allAmenities : any[] = [];\n  constructor(private adminService: AdminService , private fb: FormBuilder,private router: Router) { }\n\n  addForm = this.fb.group({\n    Name : ['', Validators.required]\n  });\n\n  ngOnInit() {\n    this.adminService.GetAllAmenities().subscribe(data=>{ data as Observable<Amenitie>\n      console.log(data);\n      this.allAmenities = data;\n      \n    });\n  }\n\n  deleteAmenitie(event)\n  {\n    const target = event.target || event.srcElement || event.currentTarget;\n    const idAttr = target.attributes.id;\n    const id = idAttr.nodeValue; //id kliknutog \n    \n    this.adminService.DeleteAmenitie(id).subscribe(data=>{\n      //brisi sa view-a:\n      var comm = this.allAmenities.find(x=> x.Id == id);\n      var idx = this.allAmenities.indexOf(comm);\n      this.allAmenities.splice(idx,1);\n    });\n  }\n\n  onSubmit()\n  {\n    this.adminService.AddAmenitie(this.addForm.value.Name).subscribe(data=>{\n      alert(\"Succsecfuly added!\");\n      this.ngOnInit();\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL0FkbWluU3R1ZmYvYXBhcnRtZW50cy9hcGFydG1lbnRzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Apartment, SearchApartment } from 'src/app/Classes/Apartment';\nimport { HomeService } from 'src/app/home.service';\nimport { FormBuilder, FormControl, FormArray } from '@angular/forms';\nimport { AdminService } from 'src/app/admin.service';\nimport { Router } from '@angular/router';\nimport { StorageService } from 'src/app/storage.service';\n\n@Component({\n  selector: 'app-apartments',\n  templateUrl: './apartments.component.html',\n  styleUrls: ['./apartments.component.css']\n})\nexport class ApartmentsComponent implements OnInit {\n\n  constructor(private adminService: AdminService ,private homeService: HomeService, private fb: FormBuilder, private router: Router,private storageService: StorageService) { }\n\n  AllApartments : any[] = [];\n  FiltredApartments : any[] = []; //bice nakon sto odradi filtriranje, pa ce se on bindovati\n  @Output() idOutput = new EventEmitter<number>();\n\n  ApartmentType = [\"\",\"FullApartman\" , \"Room\"];\n  ApartmentStatus = [\"\" , \"Active\", \"NotActive\"];\n  amNames = new Array();\n\n  searchForm= this.fb.group({\n    settlement: [],\n    checkIn: [],\n    checkOut: [],\n    guestNumber: [],\n    minRooms: [],\n    maxRooms: [],\n    maxPrice: [],\n    apartmentType: [],\n    amNames: new FormArray([]),\n    apartmentStatus: [],\n    \n  });\n\n  ngOnInit() {\n    \n    \n    this.adminService.getAllApartments().subscribe(data=> {\n     this.AllApartments = data as Apartment[];\n     this.FiltredApartments = data as Apartment[]; //\n      console.log(this.AllApartments);\n      \n      //amenities for search:\n      this.homeService.GetAmenitieNames().subscribe(names => \n        {\n          this.amNames = names;\n          this.addCheckboxes();\n  \n          this.amNames.forEach(element => {\n            console.warn(element);\n          });\n        });\n    }); \n  }\n\n  editApartment(id) {\n    // const target = event.target || event.srcElement || event.currentTarget;\n    // const idAttr = target.attributes.id;\n    // const id = idAttr.nodeValue; //id kliknutog button-a\n    console.log(id);\n\n    var apartment = this.AllApartments.find(x => x.ID == id);\n\n    this.storageService.setApartment(apartment);\n    this.router.navigate(['/admin/apartments/edit']);\n\n  } \n\n  onSearch()\n  {\n\n    var searchApartment = new SearchApartment();\n    searchApartment.CheckIn = this.searchForm.value.checkIn;\n    searchApartment.CheckOut = this.searchForm.value.checkOut;\n    searchApartment.GuestNumber = this.searchForm.value.guestNumber;\n    searchApartment.MaxPrice = this.searchForm.value.maxPrice;\n    searchApartment.MaxRooms = this.searchForm.value.maxRooms;\n    searchApartment.MinRooms = this.searchForm.value.minRooms;\n    searchApartment.Settlement = this.searchForm.value.settlement;\n    searchApartment.ApartmentType = this.searchForm.value.apartmentType;\n    searchApartment.ApartmentStatus = this.searchForm.value.apartmentStatus;\n    //amenities\n    searchApartment.Amenities = new Array();\n        for(var i=0; i < this.amNames.length; i++)\n        {\n          if(this.searchForm.controls.amNames.value[i] == true)\n          {\n            searchApartment.Amenities.push(this.amNames[i]);\n          }\n        }\n    \n    this.adminService.GetSearchApartments(searchApartment).subscribe(data=>{\n      this.FiltredApartments = data as Apartment[];\n  \n\n    });\n\n  }\n\n  private addCheckboxes()\n  {\n      this.amNames.map((o, i) => {\n        const control = new FormControl(); \n        (this.searchForm.controls.amNames as FormArray).push(control);\n      });\n  } \n\n  reset()\n  {\n    this.FiltredApartments = this.AllApartments;\n  }\n\n  sortLow()\n  {\n    this.FiltredApartments.sort((a,b) => a.PricePerNight - b.PricePerNight);\n  }\n\n  sortHigh()\n  {\n    this.FiltredApartments.sort((a,b) => b.PricePerNight - a.PricePerNight);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL0FkbWluU3R1ZmYvYXBhcnRtZW50cy9lZGl0LWFwYXJ0bWVudC9lZGl0LWFwYXJ0bWVudC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Apartment } from 'src/app/Classes/Apartment';\nimport { StorageService } from 'src/app/storage.service';\nimport { FormBuilder, Validators, FormControl, FormArray } from '@angular/forms';\nimport {Comment} from '../../../../Classes/Comment';\nimport { AdminService } from 'src/app/admin.service';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { HostService } from 'src/app/host.service';\n\n@Component({\n  selector: 'app-edit-apartment',\n  templateUrl: './edit-apartment.component.html',\n  styleUrls: ['./edit-apartment.component.css']\n})\nexport class EditApartmentComponent implements OnInit {\n\n  constructor(private hostService : HostService, private adminService: AdminService ,private storageService: StorageService, private fb: FormBuilder,private router: Router) { }\n  apartment : Apartment;\n  apartmentComments : Comment[];\n  appReady = false;\n  apartmentStatus = ['Active','NotActive'];\n  apartmentTypes = ['FullApartman','Room'];\n\n  editForm : any;\n  commentForm : any;\n\n  amNames = new Array();\n  selectedNames = new Array();\n\n  ngOnInit() {\n    this.apartment = this.storageService.getApartment();\n    this.GetAllAmenitiNames()\n    \n    console.warn(this.apartment);\n\n    this.editForm = this.fb.group({\n      Type: [this.apartment.Type, Validators.required],\n      RoomNumber: [this.apartment.RoomNumber,Validators.required],\n      GuestNumber: [this.apartment.GuestNumber,Validators.required],\n      PricePerNight: [this.apartment.PricePerNight,Validators.required],\n      SingUpTime: [this.apartment.SingUpTime.split(\"T\")[1],Validators.required],\n      SingOutTime: [this.apartment.SingOutTime.split(\"T\")[1],Validators.required],\n      Status: [this.apartment.Status,Validators.required],\n  \n      Latitude: [this.apartment.Latitude,Validators.required],\n      Longitude: [this.apartment.Longitude,Validators.required],\n      Streat: [this.apartment.Streat,Validators.required],\n      StreatNumber: [this.apartment.StreatNumber,Validators.required],\n      Settlement: [this.apartment.Settlement,Validators.required],\n      ZipCode: [this.apartment.ZipCode,Validators.required],\n      HostName: [this.apartment.HostName,Validators.required],\n      HostSurname: [this.apartment.HostSurname,Validators.required],\n      amNames:  new FormArray([])\n      \n    });\n    \n    //this.getAllComments();\n  }\n\n  onChange()\n  {\n    this.apartment.Type = this.editForm.value.Type;\n    this.apartment.RoomNumber = this.editForm.value.RoomNumber;\n    this.apartment.GuestNumber = this.editForm.value.GuestNumber;\n    this.apartment.PricePerNight = this.editForm.value.PricePerNight;\n    this.apartment.SingUpTime = this.editForm.value.SingUpTime;\n    this.apartment.SingOutTime = this.editForm.value.SingOutTime;\n    this.apartment.Status = this.editForm.value.Status;\n    this.apartment.Latitude = this.editForm.value.Latitude;\n    this.apartment.Longitude = this.editForm.value.Longitude;\n    this.apartment.Streat = this.editForm.value.Streat;\n    this.apartment.StreatNumber = this.editForm.value.StreatNumber;\n    this.apartment.Settlement = this.editForm.value.Settlement;\n    this.apartment.ZipCode = this.editForm.value.ZipCode;\n    this.apartment.Amenities = new Array();\n        for(var i=0; i < this.amNames.length; i++)\n        {\n          if(this.editForm.controls.amNames.value[i] == true)\n          {\n            this.apartment.Amenities.push(this.amNames[i]);\n          }\n        }\n    \n    \n\n    this.hostService.changeApartment(this.apartment).subscribe(data=>{\n      this.router.navigate([\"/admin/apartments\"]);\n    });\n  }\n  onDelete()\n  {\n    this.hostService.deleteApartment(this.apartment.ID).subscribe(data=>{\n      this.router.navigate([\"/admin/apartments\"]);\n    });\n  }\n  \n\n\n  getAllComments()\n  {\n    this.hostService.getCommentsForApartment(this.apartment.ID).subscribe(data=>{\n      this.apartmentComments = data as Comment[];\n      \n\n      console.warn(this.apartmentComments);\n    });\n  }\n\n  returnBack()\n  {\n    this.router.navigate([\"/admin/apartments\"]);\n  }\n\n  \n\n  private GetAllAmenitiNames()\n  {\n    this.hostService.GetAmenitieNames().subscribe(names => //all existing amenities\n      {\n        this.amNames = names;\n        console.log(this.amNames);\n        this.addCheckboxes();\n\n        this.amNames.forEach(element => {\n          console.warn(element);\n        });\n      });\n\n      \n  }\n\n  private addCheckboxes()\n  {\n      this.amNames.map((o, i) => {  //o je trenutni element, i-index\n        \n        const control = new FormControl((this.apartment.Amenities.indexOf(o) != -1)); //\n        (this.editForm.controls.amNames as FormArray).push(control);\n      });\n\n      this.getAllComments()\n\n      \n  }\n\n  deletePicture(event) {\n    const target = event.target || event.srcElement || event.currentTarget;\n    const idAttr = target.attributes.id;\n    const id = idAttr.nodeValue; //id kliknutog button-a \n\n    var picture = id;\n    var idx = this.apartment.Pictures.indexOf(picture);\n    var sendPicture = picture.split(\"localhost:8080/\")[1];\n    console.log(sendPicture);\n    this.hostService.DeltePicture(this.apartment.ID,sendPicture).subscribe(data=>{\n      this.apartment.Pictures.splice(idx,1);\n    });\n\n    \n\n  }\n\n  addNewPicutres()\n  {\n    this.storageService.setApartmentID(this.apartment.ID);\n    this.router.navigate(['host/apartments/pictures']);\n  }\n\n  deleteComment(id)\n  {\n    // const target = event.target || event.srcElement || event.currentTarget;\n    // const idAttr = target.attributes.id;\n    // const id = idAttr.nodeValue; //id kliknutog comment-a\n    \n    this.adminService.deleteApartmentComment(id).subscribe(data=>{\n      //brisi sa view-a:\n\n      var comm = this.apartmentComments.find(x=> x.Id == id);\n      var idx = this.apartmentComments.indexOf(comm);\n      this.apartmentComments.splice(idx,1);\n    });\n\n  }\n\n \n\n  \n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL0FkbWluU3R1ZmYvY3JlYXRlLWhvc3QvY3JlYXRlLWhvc3QuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { RegisterService } from 'src/app/register.service';\nimport { RegistUser, User } from 'src/app/Classes/User';\nimport { AdminService } from 'src/app/admin.service';\n\n@Component({\n  selector: 'app-create-host',\n  templateUrl: './create-host.component.html',\n  styleUrls: ['./create-host.component.css']\n})\nexport class CreateHostComponent implements OnInit {\n\n  constructor(private fb: FormBuilder , private router : Router , private adminService: AdminService) { }\n\n  invalidPass = false;\n  registUser : any;\n  genders = [\"Male\" , \"Famale\"];\n\n  registerForm = this.fb.group({\n    username: ['', Validators.required],\n    password: [\"\", [Validators.required,Validators.minLength(1)]],\n    confirmPassword: [, [Validators.required , Validators.minLength(1)]],\n    name: ['', Validators.required],\n    surname: ['', Validators.required],\n    gender: ['', Validators.required]\n    \n  });\n\n  ngOnInit() {\n    \n  }\n\n  onSubmit()\n  {\n    if(this.registerForm.value.password === this.registerForm.value.confirmPassword)\n    {\n      this.invalidPass = false;\n\n      this.registUser = new User();\n      this.registUser.Name =  this.registerForm.value.name;\n      this.registUser.Surname = this.registerForm.value.surname ; \n      this.registUser.Username = this.registerForm.value.username; \n      this.registUser.Password =  this.registerForm.value.password;\n      this.registUser.Gender =  this.registerForm.value.gender;\n      \n      this.adminService.CreateHost(this.registUser).subscribe(data=> {\n        alert(\"Host was created\");\n        console.log(this.registUser);\n        this.router.navigate([\"admin\"]);\n      });\n\n      \n    }\n    else\n    {\n      this.invalidPass = true;\n    }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL0FkbWluU3R1ZmYvcmVzZXJ2YXRpb25zL3Jlc2VydmF0aW9ucy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/admin.service';\nimport { Observable } from 'rxjs';\nimport {Reservation} from '../../../Classes/Reservation';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-reservations',\n  templateUrl: './reservations.component.html',\n  styleUrls: ['./reservations.component.css']\n})\nexport class ReservationsComponent implements OnInit {\n\n  AllReservations : any[] = [];\n  FiltredReservations : any[] = [];\n\n  ReservationStatus = [\"\",\"Created\",\"Rejected\",\"Canceled\",\"Accepted\",\"Done\"];\n\n  searchForm= this.fb.group({\n    reservationStatus: [],\n    guestUsername: [],\n\n  });\n  constructor(private adminService: AdminService, private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.adminService.getAllReservations().subscribe(data=> \n      { \n        this.AllReservations = data as Reservation[];\n        this.FiltredReservations = data as Reservation[];\n        console.log(this.AllReservations);\n      });\n  }\n\n  onSearch()\n  {\n    this.adminService.GetSearchReservations(this.searchForm.value.guestUsername,this.searchForm.value.reservationStatus).subscribe(data=>{\n      this.FiltredReservations = data as Reservation[];\n      console.warn(this.FiltredReservations);\n    });\n  }\n\n  reset()\n  {\n    this.FiltredReservations = this.AllReservations;\n  }\n\n  sortLow()\n  {\n    this.FiltredReservations.sort((a,b) => a.TotalPrice - b.TotalPrice);\n  }\n\n  sortHigh()\n  {\n    this.FiltredReservations.sort((a,b) => b.TotalPrice - a.TotalPrice);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL0FkbWluU3R1ZmYvdXNlcnMvdXNlcnMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport {AdminService} from '../../../admin.service'\nimport { Observable } from 'rxjs';\nimport { User } from 'src/app/Classes/User';\nimport { FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n\n  AllUsers : Observable<User>\n  SearchedUsers : Observable<User>\n  roles = ['Host','Guest'];\n  genders = ['Male','Famale'];\n  searchForm : any;\n  constructor(private fb: FormBuilder , private adminService: AdminService) { }\n\n  ngOnInit() {\n    this.adminService.getAllUsers().subscribe(data=> \n      { \n        this.AllUsers = data as Observable<User>;\n        this.SearchedUsers = data as Observable<User>;\n        console.log(this.AllUsers);\n      });\n\n      this.searchForm = this.fb.group({\n        Role: [\"\", ],\n        Gender: [\"\", ],\n        Username: [\"\",]\n               \n      });\n  }\n\n  changeStatus(id)\n  {\n    // const target = event.target || event.srcElement || event.currentTarget;\n    // const idAttr = target.attributes.id;\n    // const id = idAttr.nodeValue; //id kliknutog comment-a\n    console.log(id);\n    this.adminService.changeUserStatus(id).subscribe(data=> {\n      this.AllUsers.forEach(user=>{\n        if(user.ID == id)\n        {\n          if(user.Blocked)\n            user.Blocked = false;\n          else\n          user.Blocked = true;\n        }\n      });\n      if(this.AllUsers !== this.SearchedUsers)\n          this.SearchedUsers.forEach(user=>{\n            if(user.ID == id)\n            {\n              if(user.Blocked)\n                user.Blocked = false;\n              else\n              user.Blocked = true;\n            }\n          });\n    });\n\n    \n  }\n\n  onSearch()\n  {\n    this.adminService.SearchUsers(this.searchForm.value.Role ,this.searchForm.value.Gender ,this.searchForm.value.Username).subscribe(data=>{\n        this.SearchedUsers = data as Observable<User>;\n        console.log(this.SearchedUsers);\n    })\n  }\n  onReset()\n  {\n    this.SearchedUsers = this.AllUsers;\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2FkbWluLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  \n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LogInComponent } from './log-in/log-in.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { CreateHostComponent } from './admin/AdminStuff/create-host/create-host.component';\nimport { ApartmentsComponent } from './admin/AdminStuff/apartments/apartments.component';\nimport { ReservationsComponent } from './admin/AdminStuff/reservations/reservations.component';\nimport { UsersComponent } from './admin/AdminStuff/users/users.component';\nimport { GuestComponent } from './guest/guest.component';\nimport { HostComponent } from './host/host.component';\nimport { EditApartmentComponent } from './admin/AdminStuff/apartments/edit-apartment/edit-apartment.component';\nimport { AmenitieComponent } from './admin/AdminStuff/amenitie/amenitie.component';\nimport { HostApartmentsComponent } from './host/HostStuff/host-apartments/host-apartments.component';\nimport { HostCreateApartmentComponent } from './host/HostStuff/host-create-apartment/host-create-apartment.component';\nimport { HostReservationsComponent } from './host/HostStuff/host-reservations/host-reservations.component';\nimport { EditHostApartmentComponent } from './host/HostStuff/host-apartments/edit-host-apartment/edit-host-apartment.component';\nimport { HostRequestsComponent } from './host/HostStuff/host-requests/host-requests.component';\nimport { GuestApartmentsComponent } from './guest/guest-apartments/guest-apartments.component';\nimport { GuestReservationsComponent } from './guest/guest-reservations/guest-reservations.component';\nimport { ApartmentDetailsComponent } from './guest/guest-apartments/apartment-details/apartment-details.component';\nimport { GuestRequestsComponent } from './guest/guest-requests/guest-requests.component';\nimport { UploadPictureComponent } from './host/HostStuff/upload-picture/upload-picture.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { HomeApartmentDetailsComponent } from './home-apartment-details/home-apartment-details.component';\nimport { AddDatesComponent } from './add-dates/add-dates.component';\n\n\nconst routes: Routes = [\n  { \n    path: '', \n    redirectTo: '/home',\n    pathMatch: 'full' \n  },\n  { \n    path: 'login', \n    component: LogInComponent \n  },\n  { \n    path: 'register', \n    component: RegisterComponent \n  },\n  { \n    path: 'home', \n    component: HomeComponent \n  },\n  { \n    path: 'admin', \n    component: ApartmentsComponent \n  },\n  { \n    path: 'admin/createhost', \n    component: CreateHostComponent \n  },\n  { \n    path: 'admin/apartments', \n    component: ApartmentsComponent \n  },\n  { \n    path: 'admin/apartments/edit', \n    component: EditApartmentComponent \n  },\n  { \n    path: 'admin/reservations', \n    component: ReservationsComponent \n  },\n  { \n    path: 'admin/users', \n    component: UsersComponent \n  },\n  { \n    path: 'admin/amenities', \n    component: AmenitieComponent \n  },\n  { \n    path: 'host', \n    component: HostApartmentsComponent \n  },\n  { \n    path: 'host/createapartment', \n    component: HostCreateApartmentComponent \n  },\n  { \n    path: 'host/apartments', \n    component: HostApartmentsComponent \n  },\n  { \n    path: 'host/reservations', \n    component: HostReservationsComponent \n  },\n  { \n    path: 'host/apartments/edit', \n    component: EditHostApartmentComponent \n  },\n  { \n    path: 'host/requests', \n    component: HostRequestsComponent \n  },\n  { \n    path: 'guest', \n    component: GuestApartmentsComponent\n  },\n  { \n    path: 'guest/apartments', \n    component: GuestApartmentsComponent\n  },\n  { \n    path: 'guest/apartments/details', \n    component: ApartmentDetailsComponent\n  },\n  { \n    path: 'guest/reservations', \n    component: GuestReservationsComponent\n  },\n  { \n    path: 'guest/requests', \n    component: GuestRequestsComponent\n  },\n  { \n    path: 'host/apartments/pictures', \n    component: UploadPictureComponent\n  },\n  {\n    path: 'profile',\n    component: ProfileComponent\n  },\n  {\n    path: 'home/details',\n    component: HomeApartmentDetailsComponent\n  },\n  {\n    path: 'apartment/dates',\n    component: AddDatesComponent\n  }\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'AirBnbAngular';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LogInComponent } from './log-in/log-in.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { CreateHostComponent } from './admin/AdminStuff/create-host/create-host.component';\nimport { UsersComponent } from './admin/AdminStuff/users/users.component';\nimport { ApartmentsComponent } from './admin/AdminStuff/apartments/apartments.component';\nimport { ReservationsComponent } from './admin/AdminStuff/reservations/reservations.component';\nimport { LogedUserComponent } from './loged-user/loged-user.component';\nimport { HostComponent } from './host/host.component';\nimport { GuestComponent } from './guest/guest.component';\nimport { EditApartmentComponent } from './admin/AdminStuff/apartments/edit-apartment/edit-apartment.component';\nimport { AmenitieComponent } from './admin/AdminStuff/amenitie/amenitie.component';\nimport { HostApartmentsComponent } from './host/HostStuff/host-apartments/host-apartments.component';\nimport { HostReservationsComponent } from './host/HostStuff/host-reservations/host-reservations.component';\nimport { HostCreateApartmentComponent } from './host/HostStuff/host-create-apartment/host-create-apartment.component';\nimport { EditHostApartmentComponent } from './host/HostStuff/host-apartments/edit-host-apartment/edit-host-apartment.component';\nimport { HostRequestsComponent } from './host/HostStuff/host-requests/host-requests.component';\nimport { GuestReservationsComponent } from './guest/guest-reservations/guest-reservations.component';\nimport { GuestApartmentsComponent } from './guest/guest-apartments/guest-apartments.component';\nimport {ApartmentDetailsComponent} from './guest/guest-apartments/apartment-details/apartment-details.component';\nimport { GuestRequestsComponent } from './guest/guest-requests/guest-requests.component';\nimport { UploadPictureComponent } from './host/HostStuff/upload-picture/upload-picture.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { HomeApartmentDetailsComponent } from './home-apartment-details/home-apartment-details.component';\nimport { AddDatesComponent } from './add-dates/add-dates.component'\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LogInComponent,\n    RegisterComponent,\n    HomeComponent,\n    AdminComponent,\n    CreateHostComponent,\n    UsersComponent,\n    ApartmentsComponent,\n    ReservationsComponent,\n    LogedUserComponent,\n    HostComponent,\n    GuestComponent,\n    EditApartmentComponent,\n    AmenitieComponent,\n    HostApartmentsComponent,\n    HostReservationsComponent,\n    HostCreateApartmentComponent,\n    EditHostApartmentComponent,\n    HostRequestsComponent,\n    GuestReservationsComponent,\n    GuestApartmentsComponent,\n    ApartmentDetailsComponent,\n    GuestRequestsComponent,\n    UploadPictureComponent,\n    ProfileComponent,\n    HomeApartmentDetailsComponent,\n    AddDatesComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { HttpHeaders, HttpParams, HttpClient } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GuestService {\n\n  private reservationUri = \"http://localhost:8080/api/Reservation/\";\n\n  constructor(private http: HttpClient) { }\n\n  GetGuestReservations(guestId : any) : Observable<any>\n  {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Role' : localStorage.Role }),\n      params: new HttpParams().set('guestId' , guestId).set('status',status)\n      \n     };\n\n    return this.http.get(this.reservationUri+\"GetGuestReservations\",httpOptions).pipe(\n      catchError(e => throwError(console.error(\"Eror in guest service:  \" + e.error.Message)))\n    );\n  }\n\n  cancelReservationRequest(reservationId : any , status : any) : any\n  {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Role' : localStorage.Role }),\n      params: new HttpParams().set('reservationId' , reservationId).set('status',status)\n      \n     };\n\n     return this.http.delete(this.reservationUri+\"ChageReservationRequests\",httpOptions).pipe(\n      catchError(e => throwError(console.error(\"Eror in host service:  \" + e.error.Message)))\n    );\n  }\n\n  GetGuestReservationRequest(guestId : any , status : any) : Observable<any>\n  {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Role' : localStorage.Role }),\n      params: new HttpParams().set('guestId' , guestId).set('status',status)\n      \n     };\n\n    return this.http.get(this.reservationUri+\"GetGuestReservationRequest\",httpOptions).pipe(\n      catchError(e => throwError(console.error(\"Eror in host service:  \" + e.error.Message)))\n    );\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2d1ZXN0L2d1ZXN0LWFwYXJ0bWVudHMvYXBhcnRtZW50LWRldGFpbHMvYXBhcnRtZW50LWRldGFpbHMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { StorageService } from 'src/app/storage.service';\nimport { FormBuilder, Validators, FormArray } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Apartment } from 'src/app/Classes/Apartment';\nimport { Observable } from 'rxjs';\nimport { HomeService } from 'src/app/home.service';\n\n@Component({\n  selector: 'app-apartment-details',\n  templateUrl: './apartment-details.component.html',\n  styleUrls: ['./apartment-details.component.css']\n})\nexport class ApartmentDetailsComponent implements OnInit {\n\n  apartment : Apartment;\n  apartmentComments : Observable<Comment>;\n  amNames : any[] = [];\n\n  editForm : any;\n  commentForm : any;\n\n  constructor(private homeService: HomeService ,private storageService: StorageService, private fb: FormBuilder,private router: Router) { }\n\n  ngOnInit() {\n    this.apartment = this.storageService.getGuestApartment();\n    \n    \n    console.warn(this.apartment);\n\n    this.editForm = this.fb.group({\n      Type: [this.apartment.Type, Validators.required],\n      RoomNumber: [this.apartment.RoomNumber,Validators.required],\n      GuestNumber: [this.apartment.GuestNumber,Validators.required],\n      PricePerNight: [this.apartment.PricePerNight,Validators.required],\n      SingUpTime: [this.apartment.SingUpTime.split(\"T\")[1],Validators.required],\n      SingOutTime: [this.apartment.SingOutTime.split(\"T\")[1],Validators.required],\n      Status: [this.apartment.Status,Validators.required],\n  \n      Latitude: [this.apartment.Latitude,Validators.required],\n      Longitude: [this.apartment.Longitude,Validators.required],\n      Streat: [this.apartment.Streat,Validators.required],\n      StreatNumber: [this.apartment.StreatNumber,Validators.required],\n      Settlement: [this.apartment.Settlement,Validators.required],\n      ZipCode: [this.apartment.ZipCode,Validators.required],\n      HostName: [this.apartment.HostName,Validators.required],\n      HostSurname: [this.apartment.HostSurname,Validators.required],\n      \n    });\n\n    this.GetApartmentAmenitieNames();\n\n  }\n\n  returnBack()\n  {\n    this.router.navigate([\"/guest/apartments\"]);\n  }\n\n  GetApartmentAmenitieNames()\n  {\n    this.homeService.GetApartmentAmenitieNames(this.apartment.ID).subscribe(data=>{\n      this.amNames = data;\n      \n      this.getAllComments();\n    });\n  }\n\n  getAllComments()\n  {\n    this.homeService.getCommentsForApartment(this.apartment.ID).subscribe(data=>{\n      this.apartmentComments = data as Observable<Comment>;\n      \n\n      console.warn(this.apartmentComments);\n    });\n  }\n\n  \n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2d1ZXN0L2d1ZXN0LWFwYXJ0bWVudHMvZ3Vlc3QtYXBhcnRtZW50cy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { HomeService } from 'src/app/home.service';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormArray, FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { Apartment, SearchApartment } from 'src/app/Classes/Apartment';\nimport { StorageService } from 'src/app/storage.service';\n\n@Component({\n  selector: 'app-guest-apartments',\n  templateUrl: './guest-apartments.component.html',\n  styleUrls: ['./guest-apartments.component.css']\n})\nexport class GuestApartmentsComponent implements OnInit {\n\n  constructor(private homeService: HomeService ,private router : Router, private fb: FormBuilder , private storageService : StorageService) { }\n\n  ActiveApartments : any[] = [];\n  FiltredApartments : any[] = []; //bice nakon sto odradi filtriranje, pa ce se on bindovati\n\n  ApartmentType = [\"\",\"FullApartman\" , \"Room\"];\n  amNames = new Array();\n\n\n  searchForm= this.fb.group({\n    settlement: [],\n    checkIn: [],\n    checkOut: [],\n    guestNumber: [],\n    minRooms: [],\n    maxRooms: [],\n    maxPrice: [],\n    apartmentType: [],\n    amNames: new FormArray([]),\n    \n  });\n\n  ngOnInit() {\n    \n    \n    this.homeService.getActiveApartments().subscribe(data=> {\n      this.ActiveApartments = data as  Apartment[];\n      this.FiltredApartments = data as  Apartment[];\n      \n      //amenities for search:\n      this.homeService.GetAmenitieNames().subscribe(names => \n        {\n          this.amNames = names;\n          this.addCheckboxes();\n  \n          this.amNames.forEach(element => {\n            console.warn(element);\n          });\n        });\n\n    }); \n  }\n\n  moreDetails(id) {\n    // const target = event.target || event.srcElement || event.currentTarget;\n    // const idAttr = target.attributes.id;\n    // const id = idAttr.nodeValue; //id kliknutog button-a\n\n    \n\n    var apartment = this.ActiveApartments.find(x => x.ID == id);\n\n    this.storageService.setGuestApartment(apartment);\n    this.router.navigate(['guest/apartments/details']);\n  }\n\n  onSearch()\n  {\n\n    var searchApartment = new SearchApartment();\n    searchApartment.CheckIn = this.searchForm.value.checkIn;\n    searchApartment.CheckOut = this.searchForm.value.checkOut;\n    searchApartment.GuestNumber = this.searchForm.value.guestNumber;\n    searchApartment.MaxPrice = this.searchForm.value.maxPrice;\n    searchApartment.MaxRooms = this.searchForm.value.maxRooms;\n    searchApartment.MinRooms = this.searchForm.value.minRooms;\n    searchApartment.Settlement = this.searchForm.value.settlement;\n    searchApartment.ApartmentType = this.searchForm.value.apartmentType;\n    //amenities\n    searchApartment.Amenities = new Array();\n        for(var i=0; i < this.amNames.length; i++)\n        {\n          if(this.searchForm.controls.amNames.value[i] == true)\n          {\n            searchApartment.Amenities.push(this.amNames[i]);\n          }\n        }\n    \n    this.homeService.GetSearchApartments(searchApartment).subscribe(data=>{\n      this.FiltredApartments = data as Apartment[]; \n    });\n\n  }\n\n  private addCheckboxes()\n  {\n      this.amNames.map((o, i) => {\n        const control = new FormControl(); \n        (this.searchForm.controls.amNames as FormArray).push(control);\n      });\n  } \n\n  reset()\n  {\n    this.FiltredApartments = this.ActiveApartments;\n  }\n\n  sortLow()\n  {\n    this.FiltredApartments.sort((a,b) => a.PricePerNight - b.PricePerNight);\n  }\n\n  sortHigh()\n  {\n    this.FiltredApartments.sort((a,b) => b.PricePerNight - a.PricePerNight);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2d1ZXN0L2d1ZXN0LXJlcXVlc3RzL2d1ZXN0LXJlcXVlc3RzLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Reservation } from 'src/app/Classes/Reservation';\nimport { GuestService } from 'src/app/guest.service';\n\n@Component({\n  selector: 'app-guest-requests',\n  templateUrl: './guest-requests.component.html',\n  styleUrls: ['./guest-requests.component.css']\n})\nexport class GuestRequestsComponent implements OnInit {\n\n  createdReservations : any[] = [];\n  acceptedReservations : any[] = [];\n  constructor(private guestService: GuestService) { }\n\n  ngOnInit() {\n    this.guestService.GetGuestReservationRequest(2,'Created').subscribe(data=> \n      { \n        this.createdReservations = data as Reservation[];\n        console.log(this.createdReservations);\n\n        this.guestService.GetGuestReservationRequest(2,'Accepted').subscribe(data=> \n          { \n            this.acceptedReservations = data as Reservation[];\n            console.log(this.acceptedReservations);\n          });\n\n      });\n    \n  }\n\n  CancelRequest(event)\n  {\n    const target = event.target || event.srcElement || event.currentTarget;\n    const idAttr = target.attributes.id;\n    const id = idAttr.nodeValue; //id kliknutog button-a\n\n    this.guestService.cancelReservationRequest(id , 'Canceled').subscribe(data=> {\n\n      var res = this.acceptedReservations.find(x=> x.ID == id);\n      if(res != undefined)\n      {\n        var idx = this.acceptedReservations.indexOf(res);\n        this.acceptedReservations.splice(idx,1);\n      }\n\n      res = this.createdReservations.find(x=> x.ID == id);\n      if(res != undefined)\n      {\n        var idx = this.createdReservations.indexOf(res);\n        this.createdReservations.splice(idx,1);\n      }\n\n      \n      \n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2d1ZXN0L2d1ZXN0LXJlc2VydmF0aW9ucy9ndWVzdC1yZXNlcnZhdGlvbnMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Reservation } from 'src/app/Classes/Reservation';\nimport {GuestService} from '../../guest.service';\n\n@Component({\n  selector: 'app-guest-reservations',\n  templateUrl: './guest-reservations.component.html',\n  styleUrls: ['./guest-reservations.component.css']\n})\nexport class GuestReservationsComponent implements OnInit {\n\n  guestReservations : any[] = [];\n  FiltredReservations : any[] = [];\n  constructor(private guestService: GuestService) { }\n\n  ngOnInit() {\n    this.guestService.GetGuestReservations(localStorage.ID).subscribe(data=> \n      { \n        this.guestReservations = data as Reservation[];\n        this.FiltredReservations = data as Reservation[];\n        console.log(this.FiltredReservations);\n      });\n  }\n\n  sortLow()\n  {\n    this.FiltredReservations.sort((a,b) => a.TotalPrice - b.TotalPrice);\n  }\n\n  sortHigh()\n  {\n    this.FiltredReservations.sort((a,b) => b.TotalPrice - a.TotalPrice);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2d1ZXN0L2d1ZXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-guest',\n  templateUrl: './guest.component.html',\n  styleUrls: ['./guest.component.css']\n})\nexport class GuestComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUtYXBhcnRtZW50LWRldGFpbHMvaG9tZS1hcGFydG1lbnQtZGV0YWlscy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { HomeService } from '../home.service';\nimport { Apartment } from '../Classes/Apartment';\nimport { StorageService } from '../storage.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home-apartment-details',\n  templateUrl: './home-apartment-details.component.html',\n  styleUrls: ['./home-apartment-details.component.css']\n})\nexport class HomeApartmentDetailsComponent implements OnInit {\n\n  apartment : Apartment;\n  apartmentComments : Observable<Comment>;\n  amNames : any[] = [];\n\n  editForm : any;\n  commentForm : any;\n\n  constructor(private homeService: HomeService ,private storageService: StorageService, private fb: FormBuilder,private router: Router) { }\n\n  ngOnInit() {\n    this.apartment = this.storageService.getGuestApartment();\n    \n    \n    console.warn(this.apartment);\n\n    this.editForm = this.fb.group({\n      Type: [this.apartment.Type, Validators.required],\n      RoomNumber: [this.apartment.RoomNumber,Validators.required],\n      GuestNumber: [this.apartment.GuestNumber,Validators.required],\n      PricePerNight: [this.apartment.PricePerNight,Validators.required],\n      SingUpTime: [this.apartment.SingUpTime.split(\"T\")[1],Validators.required],\n      SingOutTime: [this.apartment.SingOutTime.split(\"T\")[1],Validators.required],\n      Status: [this.apartment.Status,Validators.required],\n  \n      Latitude: [this.apartment.Latitude,Validators.required],\n      Longitude: [this.apartment.Longitude,Validators.required],\n      Streat: [this.apartment.Streat,Validators.required],\n      StreatNumber: [this.apartment.StreatNumber,Validators.required],\n      Settlement: [this.apartment.Settlement,Validators.required],\n      ZipCode: [this.apartment.ZipCode,Validators.required],\n      HostName: [this.apartment.HostName,Validators.required],\n      HostSurname: [this.apartment.HostSurname,Validators.required],\n      \n    });\n\n    this.GetApartmentAmenitieNames();\n\n  }\n\n  returnBack()\n  {\n    this.router.navigate([\"/home\"]);\n  }\n\n  GetApartmentAmenitieNames()\n  {\n    this.homeService.GetApartmentAmenitieNames(this.apartment.ID).subscribe(data=>{\n      this.amNames = data;\n      \n      this.getAllComments();\n    });\n  }\n\n  getAllComments()\n  {\n    this.homeService.getCommentsForApartment(this.apartment.ID).subscribe(data=>{\n      this.apartmentComments = data as Observable<Comment>;\n      \n\n      console.warn(this.apartmentComments);\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { SearchApartment } from './Classes/Apartment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeService {\n\n  \n  private apartmentUri = \"http://localhost:8080/api/Apartment/\";\n  private amenitieUri = \"http://localhost:8080/api/Amenitie/\";\n\n  constructor(private http: HttpClient) { }\n\n  SearchUsers(userRole : any ,userGender : any , username : any) : Observable<any>\n  {   \n     const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Role' : localStorage.Role }),\n      params: new HttpParams().set('userRole' , userRole).set('userGender' , userGender).set('username' , username)\n     };\n\n    return this.http.get(this.apartmentUri+\"GetSearchApartments\",httpOptions).pipe(\n      catchError(e => throwError(console.error(\"Eror in admin service:  \" + e.error.Message)))\n    );\n\n  }\n\n  getActiveApartments() : Observable<any>\n  {    \n     const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n      \n     };\n\n    return this.http.get(this.apartmentUri+\"GetActiveApartments\",httpOptions).pipe(\n      catchError(e => throwError(console.error(\"Eror in home service:  \" + e)))\n    );\n  }\n\n  getCommentsForApartment(apartmentID : any) : Observable<any>\n  {   \n     const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json'}),\n      params: new HttpParams().set('apartmentID' , apartmentID)\n     };\n\n    return this.http.get(this.apartmentUri+\"GetCommentsForApartment\",httpOptions).pipe(\n      catchError(e => throwError(console.error(\"Eror in home service:  \" + e.error.Message)))\n    );\n\n  }\n\n  GetApartmentAmenitieNames(apartmentID : any) : Observable<any>\n  {   \n     const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n      params: new HttpParams().set('apartmentID' , apartmentID)     \n     };\n\n    return this.http.get(this.apartmentUri+\"GetApartmentAmenitieNames\",httpOptions).pipe(\n      catchError(e => throwError(alert(\"Eror in home service:  \" + e.error.Message)))\n    );\n\n  }\n\n  GetSearchApartments(apartmentDetails : any) : Observable<any>\n  {\n    const httpOptions = {\n     headers: new HttpHeaders({ 'Content-Type': 'application/json', }),\n     // params: new HttpParams().set('apartmentDetails' , apartmentDetails)     \n     };\n\n    return this.http.put(this.apartmentUri+\"GetSearchApartments\",apartmentDetails,httpOptions).pipe(\n      catchError(e => throwError(alert(\"Eror in home service:  \" + e.error.Message)))\n    );\n  }\n\n  GetAmenitieNames() : Observable<any>\n  {   \n     const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json'})     \n     };\n\n    return this.http.get(this.amenitieUri+\"GetAmenitieNames\",httpOptions).pipe(\n      catchError(e => throwError(alert(\"Eror in host service:  \" + e.error.Message)))\n    );\n\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { HomeService } from '../home.service';\nimport {Apartment, SearchApartment} from '../Classes/Apartment'\nimport { Observable } from 'rxjs';\nimport { FormBuilder, Validators, FormControl, FormArray } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { StorageService } from '../storage.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private storageService : StorageService, private homeService: HomeService ,private router : Router, private fb: FormBuilder) { }\n\n  ActiveApartments : any[] = [];\n  FiltredApartments : any[] = []; //bice nakon sto odradi filtriranje, pa ce se on bindovati\n\n  ApartmentType = [\"\",\"FullApartman\" , \"Room\"];\n  amNames = new Array();\n\n\n  searchForm= this.fb.group({\n    settlement: [],\n    checkIn: [],\n    checkOut: [],\n    guestNumber: [],\n    minRooms: [],\n    maxRooms: [],\n    maxPrice: [],\n    apartmentType: [],\n    amNames: new FormArray([]),\n    \n  });\n\n  ngOnInit() {\n  \n    this.homeService.getActiveApartments().subscribe(data=> {\n      this.ActiveApartments = data as Apartment[];\n      this.FiltredApartments = data as Apartment[];\n\n        //amenities for search:\n        this.homeService.GetAmenitieNames().subscribe(names => \n          {\n            this.amNames = names;\n            this.addCheckboxes();\n    \n            this.amNames.forEach(element => {\n              console.warn(element);\n            });\n          });\n    }); \n  }\n\n  moreDetails(id) {\n    // const target = event.target || event.srcElement || event.currentTarget;\n    // const idAttr = target.attributes.id;\n    // const value = idAttr.nodeValue; //id kliknutog button-a\n\n    console.log(id); // id\n    var apartment = this.ActiveApartments.find(x => x.ID == id);\n\n    this.storageService.setGuestApartment(apartment);\n    this.router.navigate(['home/details']);\n  }\n\n  onSearch()\n  {\n\n    var searchApartment = new SearchApartment();\n    searchApartment.CheckIn = this.searchForm.value.checkIn;\n    searchApartment.CheckOut = this.searchForm.value.checkOut;\n    searchApartment.GuestNumber = this.searchForm.value.guestNumber;\n    searchApartment.MaxPrice = this.searchForm.value.maxPrice;\n    searchApartment.MaxRooms = this.searchForm.value.maxRooms;\n    searchApartment.MinRooms = this.searchForm.value.minRooms;\n    searchApartment.Settlement = this.searchForm.value.settlement;\n    searchApartment.ApartmentType = this.searchForm.value.apartmentType;\n    //amenities\n    searchApartment.Amenities = new Array();\n        for(var i=0; i < this.amNames.length; i++)\n        {\n          if(this.searchForm.controls.amNames.value[i] == true)\n          {\n            searchApartment.Amenities.push(this.amNames[i]);\n          }\n        }\n    \n    this.homeService.GetSearchApartments(searchApartment).subscribe(data=>{\n      this.FiltredApartments = data as Apartment[]; \n    });\n\n  }\n\n  private addCheckboxes()\n  {\n      this.amNames.map((o, i) => {\n        const control = new FormControl(); \n        (this.searchForm.controls.amNames as FormArray).push(control);\n      });\n  } \n\n  logIn()\n  {\n    this.router.navigate([\"login\"]);\n  }\n\n  reset()\n  {\n    this.FiltredApartments = this.ActiveApartments;\n  }\n\n  sortLow()\n  {\n    this.FiltredApartments.sort((a,b) => a.PricePerNight - b.PricePerNight);\n  }\n\n  sortHigh()\n  {\n    this.FiltredApartments.sort((a,b) => b.PricePerNight - a.PricePerNight);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable,throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HostService {\n\n  private apartmentUri = \"http://localhost:8080/api/Apartment/\";\n  private amenitieUri = \"http://localhost:8080/api/Amenitie/\";\n  private reservationUri = \"http://localhost:8080/api/Reservation/\";\n  private userUri = \"http://localhost:8080/api/Users/\";\n\n  constructor(private http: HttpClient) { }\n\n  addDates(dateModel : any ) : any\n  {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json','Role' : localStorage.Role }),\n     };\n\n     return this.http.put(this.apartmentUri+\"AddRentDates\",dateModel,httpOptions).pipe(\n      catchError(e => throwError(console.error(\"Eror in host service:  \" + e.error.Message)))\n    );;\n  }\n\n  getHostReservations(hostId : any) : Observable<any>\n  {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json','Role' : localStorage.Role }),\n      params: new HttpParams().set('hostId' , hostId)\n      \n     };\n\n    return this.http.get(this.reservationUri+\"GetHostReservations\",httpOptions).pipe(\n      catchError(e => throwError(console.error(\"Eror in host service:  \" + e.error.Message)))\n    );\n  }\n\n  changeUserStatus(reservationId : any , status : any) : any\n  {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json','Role' : localStorage.Role }),\n      params: new HttpParams().set('reservationId' , reservationId).set('status',status)\n      \n     };\n\n     return this.http.delete(this.reservationUri+\"ChageReservationRequests\",httpOptions).pipe(\n      catchError(e => throwError(console.error(\"Eror in host service:  \" + e.error.Message)))\n    );\n  }\n\n  GetReservationRequests(hostId : any , status : any) : Observable<any>\n  {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json','Role' : localStorage.Role }),\n      params: new HttpParams().set('hostId' , hostId).set('status',status)\n      \n     };\n\n    return this.http.get(this.reservationUri+\"GetReservationRequests\",httpOptions).pipe(\n      catchError(e => throwError(console.error(\"Eror in host service:  \" + e.error.Message)))\n    );\n  }\n\n  getHostApartments(hostId : any) : Observable<any>\n  {    \n     const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json','Role' : localStorage.Role }),\n      params: new HttpParams().set('hostId' , hostId)\n      \n     };\n\n    return this.http.get(this.apartmentUri+\"GetHostApartments\",httpOptions).pipe(\n      catchError(e => throwError(console.error(\"Eror in host service:  \" + e)))\n    );\n  }\n\n  ChangeStatusApartmentComment(commentId : any) : any\n  {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json','Role' : localStorage.Role }),\n     };\n\n     return this.http.patch(this.apartmentUri+\"ChangeStatusApartmentComment?commentId=\"+commentId,httpOptions).pipe(\n      catchError(e => throwError(console.error(\"Eror in host service:  \" + e.error.Message)))\n    );;\n  }\n\n  changeApartment(apartment : any) : any\n  {   \n     const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json','Role' : localStorage.Role }),\n     };\n\n    return this.http.patch(this.apartmentUri+\"ChangeApartment\",apartment,httpOptions).pipe(\n      catchError(e => throwError(console.error(\"Eror in host service:  \" + e.error.Message)))\n    );\n\n  }\n\n  getCommentsForApartment(apartmentID : any) : Observable<any>\n  {   \n     const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json','Role' : localStorage.Role }),\n      params: new HttpParams().set('apartmentID' , apartmentID)\n     };\n\n    return this.http.get(this.apartmentUri+\"GetAllCommentsForApartment\",httpOptions).pipe(\n      catchError(e => throwError(console.error(\"Eror in host service:  \" + e.error.Message)))\n    );\n\n  }\n\n  deleteApartment(apartmentId : any) : any\n  {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json','Role' : localStorage.Role }),\n      params: new HttpParams().set('apartmentId' , apartmentId)\n     };\n\n     return this.http.delete(this.apartmentUri+\"DeleteApartment\",httpOptions).pipe(\n      catchError(e => throwError(console.error(\"Eror in host service:  \" + e.error.Message)))\n    );;\n  }\n\n  addApartment(apartmentBM : any) : any\n  {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json','Role' : localStorage.Role }),\n     };\n\n     return this.http.put(this.apartmentUri+\"AddApartment\",apartmentBM,httpOptions).pipe(\n      catchError(e => throwError(console.error(\"Eror in host service:  \" + e.error.Message)))\n    );;\n  }\n\n  GetAmenitieNames() : Observable<any>\n  {   \n     const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Role' : localStorage.Role })     \n     };\n\n    return this.http.get(this.amenitieUri+\"GetAmenitieNames\",httpOptions).pipe(\n      catchError(e => throwError(alert(\"Eror in host service:  \" + e.error.Message)))\n    );\n\n  }\n\n  DeltePicture(apartmentId : any , picture : any) : any\n  {   \n     const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Role' : localStorage.Role }),\n      params: new HttpParams().set('apartmentId' , apartmentId).set('picture',picture)     \n     };\n\n    return this.http.delete(this.apartmentUri+\"DeletePicture\",httpOptions).pipe(\n      catchError(e => throwError(alert(\"Eror in host service:  \" + e.error.Message)))\n    );\n\n  }\n\n  uploadDocument(document, apartmentID) : Observable<any> \n  { \n    let httpOptions = {\n     // headers: new HttpHeaders({'Content-Type': 'application/json', 'Role' : localStorage.Role }),\n      params: new HttpParams().append(\"apartmentID\", apartmentID)\n  };\n    return this.http.post(this.userUri + \"UploadPictures\", document, httpOptions).pipe(\n      catchError(e => throwError(alert(\"Eror in host service, pictures problem :  \" + e.error.Message)))\n    );\n  }\n\n  GetSearchHostApartments(apartmentDetails : any) : Observable<any>\n  {\n    const httpOptions = {\n     headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Role' : localStorage.Role}),\n     // params: new HttpParams().set('apartmentDetails' , apartmentDetails)     \n     };\n\n    return this.http.put(this.apartmentUri+\"GetSearchHostApartments\",apartmentDetails,httpOptions).pipe(\n      catchError(e => throwError(alert(\"Eror in host service:  \" + e.error.Message)))\n    );\n  }\n\n  GetSearchHostReservations(username : any, status : any ): Observable<any>\n  {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Role' : localStorage.Role}),\n      params: new HttpParams().set('hostId', localStorage.ID).set('username' , username).set('status' , status)     \n      };\n \n     return this.http.get(this.reservationUri+\"GetSearchHostReservations\",httpOptions).pipe(\n       catchError(e => throwError(alert(\"Eror in host service:  \" + e.error.Message)))\n     );\n  }\n\n  addRentDate(rentDate: any)\n  {\n    let httpOptions = {\n       headers: new HttpHeaders({'Content-Type': 'application/json', 'Role' : localStorage.Role }),\n      // params: new HttpParams().set(\"apartmentID\", apartmentID).set(\"rentDate\",rentDate)\n   };\n     return this.http.put(this.apartmentUri + \"AddHostRentDate\",rentDate, httpOptions).pipe(\n       catchError(e => throwError(alert(\"Eror in host service, rent date problem :  \" + e.error.Message)))\n     );\n  }\n\n  GetHostApartmentRentDates(apartmanID : any ): Observable<any>\n  {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Role' : localStorage.Role}),\n      params: new HttpParams().set('apartmanID', apartmanID)     \n      };\n \n     return this.http.get(this.apartmentUri+\"GetHostApartmentRentDates\",httpOptions).pipe(\n       catchError(e => throwError(alert(\"Eror in host service, rent date problem :   \" + e.error.Message)))\n     );\n  }\n\n  DeleteHostRentDate(dateID : any) : any\n  {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Role' : localStorage.Role }),\n      params: new HttpParams().set('dateID' , dateID)    \n     };\n\n    return this.http.delete(this.apartmentUri+\"DeleteHostRentDate\",httpOptions).pipe(\n      catchError(e => throwError(alert(\"Eror in host service, delete rent date:  \" + e.error.Message)))\n    );\n  }\n  \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvc3QvSG9zdFN0dWZmL2hvc3QtYXBhcnRtZW50cy9lZGl0LWhvc3QtYXBhcnRtZW50L2VkaXQtaG9zdC1hcGFydG1lbnQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Apartment, AddRentDate } from '../../../../../app/Classes/Apartment';\nimport { StorageService } from '../../../../../app/storage.service';\nimport { FormBuilder, Validators, FormArray, FormControl } from '@angular/forms';\nimport {Comment} from '../../../../Classes/Comment';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { HostService } from 'src/app/host.service';\nimport { DateModelBM } from 'src/app/Classes/DateModel';\n\n@Component({\n  selector: 'app-edit-host-apartment',\n  templateUrl: './edit-host-apartment.component.html',\n  styleUrls: ['./edit-host-apartment.component.css']\n})\nexport class EditHostApartmentComponent implements OnInit {\n\n  constructor(private hostService: HostService ,private storageService: StorageService, private fb: FormBuilder,private fb2: FormBuilder,private router: Router) { }\n  apartment : Apartment;\n  apartmentComments : Observable<Comment>;\n  appReady = false;\n  apartmentStatus = ['Active','NotActive'];\n  apartmentTypes = ['FullApartman','Room'];\n\n  editForm : any;\n  commentForm : any;\n\n  rentDateForm = this.fb2.group({\n    rentDate: [],\n  });\n \n\n  amNames = new Array();\n  selectedNames = new Array();\n  apartmentDates : any[] = [];\n  apartmentDatesString = new Array();\n\n  ngOnInit() {\n    this.apartment = this.storageService.getHostApartment();\n\n    this.GetAllAmenitiNames();\n\n    console.warn(this.apartment);\n\n    this.editForm = this.fb.group({\n      Type: [this.apartment.Type, Validators.required],\n      RoomNumber: [this.apartment.RoomNumber,Validators.required],\n      GuestNumber: [this.apartment.GuestNumber,Validators.required],\n      PricePerNight: [this.apartment.PricePerNight,Validators.required],\n      SingUpTime: [this.apartment.SingUpTime.split(\"T\")[1],Validators.required],\n      SingOutTime: [this.apartment.SingOutTime.split(\"T\")[1],Validators.required],\n      Status: [this.apartment.Status,Validators.required],\n  \n      Latitude: [this.apartment.Latitude,Validators.required],\n      Longitude: [this.apartment.Longitude,Validators.required],\n      Streat: [this.apartment.Streat,Validators.required],\n      StreatNumber: [this.apartment.StreatNumber,Validators.required],\n      Settlement: [this.apartment.Settlement,Validators.required],\n      ZipCode: [this.apartment.ZipCode,Validators.required],\n      HostName: [this.apartment.HostName,Validators.required],\n      HostSurname: [this.apartment.HostSurname,Validators.required],\n      amNames:  new FormArray([])\n      \n    });\n    \n    //this.getAllComments();\n  }\n\n  \n\n  onChange()\n  {\n    this.apartment.Type = this.editForm.value.Type;\n    this.apartment.RoomNumber = this.editForm.value.RoomNumber;\n    this.apartment.GuestNumber = this.editForm.value.GuestNumber;\n    this.apartment.PricePerNight = this.editForm.value.PricePerNight;\n    this.apartment.SingUpTime = this.editForm.value.SingUpTime;\n    this.apartment.SingOutTime = this.editForm.value.SingOutTime;\n    this.apartment.Status = this.editForm.value.Status;\n    this.apartment.Latitude = this.editForm.value.Latitude;\n    this.apartment.Longitude = this.editForm.value.Longitude;\n    this.apartment.Streat = this.editForm.value.Streat;\n    this.apartment.StreatNumber = this.editForm.value.StreatNumber;\n    this.apartment.Settlement = this.editForm.value.Settlement;\n    this.apartment.ZipCode = this.editForm.value.ZipCode;\n    this.apartment.Amenities = new Array();\n        for(var i=0; i < this.amNames.length; i++)\n        {\n          if(this.editForm.controls.amNames.value[i] == true)\n          {\n            this.apartment.Amenities.push(this.amNames[i]);\n          }\n        }\n    \n    \n\n    this.hostService.changeApartment(this.apartment).subscribe(data=>{\n      this.router.navigate([\"/host/apartments\"]);\n    });\n  }\n  onDelete()\n  {\n    this.hostService.deleteApartment(this.apartment.ID).subscribe(data=>{\n      this.router.navigate([\"/host/apartments\"]);\n    });\n  }\n  \n\n  chageComment(event)\n  {\n    const target = event.target || event.srcElement || event.currentTarget;\n    const idAttr = target.attributes.id;\n    const id = idAttr.nodeValue; //id kliknutog comment-a\n    \n    this.hostService.ChangeStatusApartmentComment(id).subscribe(data=>{\n      this.apartmentComments.forEach(comment=>{\n        if(comment.Id == id)\n        {\n          if(comment.Blocked)\n          comment.Blocked = false;\n          else\n          comment.Blocked = true;\n        }\n      });\n    });\n\n  }\n\n  getAllComments()\n  {\n    this.hostService.getCommentsForApartment(this.apartment.ID).subscribe(data=>{\n      this.apartmentComments = data as Observable<Comment>;\n      \n\n      console.warn(this.apartmentComments);\n\n      this.getDateModels(); //vraca rentDates za apartment\n    });\n  }\n\n  returnBack()\n  {\n    this.router.navigate([\"/host/apartments\"]);\n  }\n\n  \n\n  private GetAllAmenitiNames()\n  {\n    this.hostService.GetAmenitieNames().subscribe(names => //all existing amenities\n      {\n        this.amNames = names;\n        this.addCheckboxes();\n\n        this.amNames.forEach(element => {\n          console.warn(element);\n        });\n      });\n\n      \n  }\n\n  private addCheckboxes()\n  {\n      this.amNames.map((o, i) => {  //o je trenutni element, i-index\n        \n        const control = new FormControl((this.apartment.Amenities.indexOf(o) != -1)); //\n        (this.editForm.controls.amNames as FormArray).push(control);\n      });\n\n      this.getAllComments()\n\n      \n  }\n\n  deletePicture(event) {\n    const target = event.target || event.srcElement || event.currentTarget;\n    const idAttr = target.attributes.id;\n    const id = idAttr.nodeValue; //id kliknutog button-a \n\n    var picture = id;\n    var idx = this.apartment.Pictures.indexOf(picture);\n    var sendPicture = picture.split(\"localhost:8080/\")[1];\n    console.log(sendPicture);\n    this.hostService.DeltePicture(this.apartment.ID,sendPicture).subscribe(data=>{\n      this.apartment.Pictures.splice(idx,1);\n    });\n\n    \n\n  }\n\n  addNewPicutres()\n  {\n    this.storageService.setApartmentID(this.apartment.ID);\n    this.router.navigate(['host/apartments/pictures']);\n  }\n\n  getDateModels()\n  {\n    this.hostService.GetHostApartmentRentDates(this.apartment.ID).subscribe(data=>{\n      this.apartmentDates = data as DateModelBM[];\n    \n    });\n  }\n\n  addRentDate()\n  {\n    console.log(this.rentDateForm.value.rentDate); \n    var rentDate = new AddRentDate();\n    rentDate.ApartmentID = this.apartment.ID;\n    rentDate.RentDate = this.rentDateForm.value.rentDate;\n\n    this.hostService.addRentDate(rentDate).subscribe(data=>{\n      this.getDateModels();\n    });\n  }  \n\n  deleteRentDate(id)\n  {\n    console.warn(id);\n    this.hostService.DeleteHostRentDate(id).subscribe(data=>{\n      this.getDateModels();\n      // var idx = this.apartmentDates.indexOf(id);\n\n      // this.apartmentDates.splice(idx,1);\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvc3QvSG9zdFN0dWZmL2hvc3QtYXBhcnRtZW50cy9ob3N0LWFwYXJ0bWVudHMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { HostService } from 'src/app/host.service';\nimport { Observable } from 'rxjs';\nimport { Apartment, SearchApartment } from 'src/app/Classes/Apartment';\nimport { FormBuilder, FormControl, FormArray } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { StorageService } from 'src/app/storage.service';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { HomeService } from 'src/app/home.service';\n\n@Component({\n  selector: 'app-host-apartments',\n  templateUrl: './host-apartments.component.html',\n  styleUrls: ['./host-apartments.component.css']\n})\nexport class HostApartmentsComponent implements OnInit {\n\n  HostApartmants : any[] = [];\n  FiltredApartments : any[] = [];\n  apartmentPictures : any;\n\n  ApartmentType = [\"\",\"FullApartman\" , \"Room\"];\n  ApartmentStatus = [\"\" , \"Active\", \"NotActive\"];\n  amNames = new Array();\n\n  searchForm= this.fb.group({\n    settlement: [],\n    checkIn: [],\n    checkOut: [],\n    guestNumber: [],\n    minRooms: [],\n    maxRooms: [],\n    maxPrice: [],\n    apartmentType: [],\n    amNames: new FormArray([]),\n    apartmentStatus: [],\n    \n  });\n\n  constructor(private _sanitizer: DomSanitizer , private hostService : HostService,private fb: FormBuilder, private router: Router,private storageService: StorageService, private homeService: HomeService) { }\n\n\n  ngOnInit() {\n     this.hostService.getHostApartments(localStorage.ID).subscribe(data => {\n        this.HostApartmants = data as Apartment[];\n        this.FiltredApartments = data as Apartment[]; //\n        console.warn(this.FiltredApartments);\n        //amenities for search:\n        this.homeService.GetAmenitieNames().subscribe(names => \n          {\n            this.amNames = names;\n            this.addCheckboxes();\n    \n            this.amNames.forEach(element => {\n              console.warn(element);\n            });\n          });\n       \n     })\n\n    \n  }\n\n  editApartment(id) {\n    // const target = event.target || event.srcElement || event.currentTarget;\n    // const idAttr = target.attributes.id;\n    // const id = idAttr.nodeValue; //id kliknutog button-a\n\n    var apartment = this.HostApartmants.find(x => x.ID == id);\n\n    this.storageService.setHostApartment(apartment);\n    this.router.navigate(['host/apartments/edit']);\n\n  }\n\n  onSearch()\n  {\n\n    var searchApartment = new SearchApartment();\n    searchApartment.CheckIn = this.searchForm.value.checkIn;\n    searchApartment.CheckOut = this.searchForm.value.checkOut;\n    searchApartment.GuestNumber = this.searchForm.value.guestNumber;\n    searchApartment.MaxPrice = this.searchForm.value.maxPrice;\n    searchApartment.MaxRooms = this.searchForm.value.maxRooms;\n    searchApartment.MinRooms = this.searchForm.value.minRooms;\n    searchApartment.Settlement = this.searchForm.value.settlement;\n    searchApartment.ApartmentType = this.searchForm.value.apartmentType;\n    searchApartment.ApartmentStatus = this.searchForm.value.apartmentStatus;\n    searchApartment.HostID = localStorage.ID;\n    //amenities\n    searchApartment.Amenities = new Array();\n        for(var i=0; i < this.amNames.length; i++)\n        {\n          if(this.searchForm.controls.amNames.value[i] == true)\n          {\n            searchApartment.Amenities.push(this.amNames[i]);\n          }\n        }\n    \n    this.hostService.GetSearchHostApartments(searchApartment).subscribe(data=>{\n      this.FiltredApartments = data as Apartment[];\n  \n\n    });\n\n  }\n\n  private addCheckboxes()\n  {\n      this.amNames.map((o, i) => {\n        const control = new FormControl(); \n        (this.searchForm.controls.amNames as FormArray).push(control);\n      });\n  } \n\n  reset()\n  {\n    this.FiltredApartments = this.HostApartmants;\n  }\n\n  sortLow()\n  {\n    this.FiltredApartments.sort((a,b) => a.PricePerNight - b.PricePerNight);\n  }\n\n  sortHigh()\n  {\n    this.FiltredApartments.sort((a,b) => b.PricePerNight - a.PricePerNight);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvc3QvSG9zdFN0dWZmL2hvc3QtY3JlYXRlLWFwYXJ0bWVudC9ob3N0LWNyZWF0ZS1hcGFydG1lbnQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { Validators, FormBuilder, FormArray, FormControl } from '@angular/forms';\nimport { HostService } from 'src/app/host.service';\nimport { Router } from '@angular/router';\nimport { Apartment } from 'src/app/Classes/Apartment';\nimport { StorageService } from 'src/app/storage.service';\n\n@Component({\n  selector: 'app-host-create-apartment',\n  templateUrl: './host-create-apartment.component.html',\n  styleUrls: ['./host-create-apartment.component.css']\n})\nexport class HostCreateApartmentComponent implements OnInit {\n\n  addForm : any;\n  apartmentTypes = ['FullApartman','Room'];\n  apartment : any;\n  amNames = new Array();\n  \n  constructor(private hostService: HostService , private fb: FormBuilder,private router: Router, private storageService: StorageService) { }\n\n  ngOnInit() {\n\n    this.hostService.GetAmenitieNames().subscribe(names => \n      {\n        this.amNames = names;\n        this.addCheckboxes();\n\n        this.amNames.forEach(element => {\n          console.warn(element);\n        });\n      });\n\n\n    this.addForm = this.fb.group({\n      Type: [\"\", Validators.required],\n      RoomNumber: [,Validators.required],\n      GuestNumber: [,Validators.required],\n      PricePerNight: [,Validators.required],\n      SingUpTime: [,Validators.required],\n      SingOutTime: [,Validators.required],\n  \n      Latitude: [,Validators.required],\n      Longitude: [,Validators.required],\n      Streat: [,Validators.required],\n      StreatNumber: [,Validators.required],\n      Settlement: [,Validators.required],\n      ZipCode: [,Validators.required],\n      amNames : new FormArray([])\n      \n    });\n  }\n\n  createApartment()\n  {\n    this.AddApartmentInfos(this.addForm.value);\n    this.apartment.HostID = localStorage.ID;\n\n    this.hostService.addApartment(this.apartment).subscribe(data=>{\n      var apartmentID = data as number;\n      this.storageService.setApartmentID(apartmentID);\n      \n      this.router.navigate(['apartment/dates']);\n      \n    });\n  }\n\n  AddApartmentInfos(element : any)\n  {\n     this.apartment = new Apartment();\n        this.apartment.ID = element.ID;\n        this.apartment.Type = element.Type;\n        this.apartment.RoomNumber = element.RoomNumber;\n        this.apartment.GuestNumber = element.GuestNumber;\n        this.apartment.PricePerNight = element.PricePerNight;\n        this.apartment.RentDates = element.RentDates;\n        this.apartment.AvailableDates = element.AvailableDates;\n        this.apartment.Pictures = element.Pictures;\n        this.apartment.SingUpTime = element.SingUpTime;\n        this.apartment.SingOutTime = element.SingOutTime;\n        this.apartment.Status = element.Status;\n\n        this.apartment.CommentIDs = element.CommentIDs;\n        this.apartment.Latitude = element.Latitude;\n        this.apartment.Longitude = element.Longitude;\n        this.apartment.Streat = element.Streat;\n        this.apartment.StreatNumber = element.StreatNumber;\n        this.apartment.Settlement = element.Settlement;\n        this.apartment.ZipCode = element.ZipCode;\n        this.apartment.HostID = element.HostID;\n        this.apartment.HostName = element.HostName;\n        this.apartment.HostSurname = element.HostSurname;\n\n        this.apartment.Amenities = new Array();\n        for(var i=0; i < this.amNames.length; i++)\n        {\n          if(this.addForm.controls.amNames.value[i] == true)\n          {\n            this.apartment.Amenities.push(this.amNames[i]);\n          }\n        }\n\n        \n  }\n\n  private addCheckboxes()\n  {\n      this.amNames.map((o, i) => {\n        const control = new FormControl(); \n        (this.addForm.controls.amNames as FormArray).push(control);\n      });\n  } \n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvc3QvSG9zdFN0dWZmL2hvc3QtcmVxdWVzdHMvaG9zdC1yZXF1ZXN0cy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { HostService } from 'src/app/host.service';\nimport { Observable } from 'rxjs';\nimport { Reservation } from 'src/app/Classes/Reservation';\n\n@Component({\n  selector: 'app-host-requests',\n  templateUrl: './host-requests.component.html',\n  styleUrls: ['./host-requests.component.css']\n})\nexport class HostRequestsComponent implements OnInit {\n\n  createdReservations : any[] = [];\n  acceptedReservations : any[] = [];\n  constructor(private hostService: HostService) { }\n\n  ngOnInit() {\n    this.hostService.GetReservationRequests(3,'Created').subscribe(data=> \n      { \n        this.createdReservations = data as Reservation[];\n        console.log(this.createdReservations);\n\n        this.hostService.GetReservationRequests(3,'Accepted').subscribe(data=> \n          { \n            this.acceptedReservations = data as Reservation[];\n            console.log(this.acceptedReservations);\n          });\n\n      });\n    \n  }\n\n  acceptRequest(event)\n  {\n    const target = event.target || event.srcElement || event.currentTarget;\n    const idAttr = target.attributes.id;\n    const id = idAttr.nodeValue; //id kliknutog button-a\n\n    this.hostService.changeUserStatus(id , 'Accepted').subscribe(data=> {\n      this.createdReservations.forEach(reservation=>{\n        if(reservation.ID == id)\n        {\n          //prebaci u Accepted listu\n          var res = reservation;\n          res.Stauts = 'Accepted';\n          this.acceptedReservations.push(res);\n\n          //brisi iz Created liste\n          var idx = this.createdReservations.indexOf(reservation);\n          this.createdReservations.splice(idx,1);\n\n\n        }\n      });\n    });\n  }\n\n  rejectRequest(event)\n  {\n    const target = event.target || event.srcElement || event.currentTarget;\n    const idAttr = target.attributes.id;\n    const id = idAttr.nodeValue; //id kliknutog button-a\n\n    this.hostService.changeUserStatus(id , 'Rejected').subscribe(data=> {\n\n      var res = this.acceptedReservations.find(x=> x.ID == id);\n      if(res != undefined)\n      {\n        var idx = this.acceptedReservations.indexOf(res);\n        this.acceptedReservations.splice(idx,1);\n      }\n\n      res = this.createdReservations.find(x=> x.ID == id);\n      if(res != undefined)\n      {\n        var idx = this.createdReservations.indexOf(res);\n        this.createdReservations.splice(idx,1);\n      }\n\n      \n      \n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvc3QvSG9zdFN0dWZmL2hvc3QtcmVzZXJ2YXRpb25zL2hvc3QtcmVzZXJ2YXRpb25zLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Reservation } from 'src/app/Classes/Reservation';\nimport { HostService } from 'src/app/host.service';\nimport { FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-host-reservations',\n  templateUrl: './host-reservations.component.html',\n  styleUrls: ['./host-reservations.component.css']\n})\nexport class HostReservationsComponent implements OnInit {\n\n  hostReservations : any[] = [];\n  FiltredReservations : any[] = [];\n\n  ReservationStatus = [\"\",\"Created\",\"Rejected\",\"Canceled\",\"Accepted\",\"Done\"];\n\n  searchForm= this.fb.group({\n    reservationStatus: [],\n    guestUsername: [],\n\n  });\n\n  constructor(private hostService: HostService,private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.hostService.getHostReservations(3).subscribe(data=> \n      { \n        this.hostReservations = data as Reservation[];\n        this.FiltredReservations = data as Reservation[];\n        \n      });\n  }\n\n  onSearch()\n  {\n    this.hostService.GetSearchHostReservations(this.searchForm.value.guestUsername,this.searchForm.value.reservationStatus).subscribe(data=>{\n      this.FiltredReservations = data as Reservation[];\n      console.warn(this.FiltredReservations);\n    });\n  }\n\n  reset()\n  {\n    this.FiltredReservations = this.hostReservations;\n  }\n\n  sortLow()\n  {\n    this.FiltredReservations.sort((a,b) => a.TotalPrice - b.TotalPrice);\n  }\n\n  sortHigh()\n  {\n    this.FiltredReservations.sort((a,b) => b.TotalPrice - a.TotalPrice);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvc3QvSG9zdFN0dWZmL3VwbG9hZC1waWN0dXJlL3VwbG9hZC1waWN0dXJlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { HostService } from 'src/app/host.service';\nimport { Router } from '@angular/router';\nimport { StorageService } from 'src/app/storage.service';\n\n@Component({\n  selector: 'app-upload-picture',\n  templateUrl: './upload-picture.component.html',\n  styleUrls: ['./upload-picture.component.css']\n})\nexport class UploadPictureComponent implements OnInit {\n\n  constructor(private hostService : HostService, private router : Router ,private storageService : StorageService) { }\n\n  url: string;\n  selectedFile: File = null;\n  apartmantID : number;\n\n  onSelectFile(event) { // called each time file input changes\n    if (event.target.files && event.target.files[0]) {\n      this.selectedFile = <File>event.target.files[0];\n\n      var reader = new FileReader();\n\n      reader.readAsDataURL(event.target.files[0]); // read file as data url\n\n      reader.onload = (event) => { // called once readAsDataURL is completed\n        this.url = reader.result as string;\n      }\n    }\n  }\n\n  ngOnInit() {\n    this.apartmantID = this.storageService.getApartmentID();\n    console.log(this.apartmantID);\n  }\n\n  onDone()\n  {\n    alert(\"Apartment is added\");\n    if(localStorage.Role == \"Host\")\n      this.router.navigate(['host/apartments']);\n    else if(localStorage.Role == \"Admin\")\n      this.router.navigate(['admin/apartments']);\n    \n  }\n\n  onConfirm()\n  {\n    const fd = new FormData();\n    fd.append('image', this.selectedFile, this.selectedFile.name);\n    this.hostService.uploadDocument(fd, this.apartmantID).subscribe(() => {\n      alert(\"Successful Added image.\");\n\n    })\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvc3QvaG9zdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport {HostService} from '../host.service'\nimport { Apartment } from '../Classes/Apartment';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-host',\n  templateUrl: './host.component.html',\n  styleUrls: ['./host.component.css']\n})\nexport class HostComponent implements OnInit {\n\n  constructor(private hostService : HostService) { }\n\n  ngOnInit() {\n    \n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZy1pbi9sb2ctaW4uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport {  Validators, FormBuilder } from '@angular/forms';\nimport { LoginService } from '../login.service';\nimport {LogBm} from '../Classes/LogBM'\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-log-in',\n  templateUrl: './log-in.component.html',\n  styleUrls: ['./log-in.component.css']\n})\nexport class LogInComponent implements OnInit {\n\n  userInfo : LogBm;\n  constructor(private router : Router,private fb: FormBuilder , private logingService: LoginService) { }\n\n  loginForm = this.fb.group({\n    username: ['', Validators.required],\n    password: ['', Validators.required],\n });\n\n  ngOnInit() {\n  }\n\n  onSubmit()\n  {\n    this.logingService.TryLog(this.loginForm.value.username,this.loginForm.value.password).subscribe(data=>{\n      this.userInfo = data as LogBm;\n      console.log(this.userInfo);\n\n      localStorage.setItem('Role', this.userInfo.Role);\n      localStorage.setItem('ID', this.userInfo.ID);\n          \n          if (this.userInfo.Role == 'Admin')\n          {\n            this.router.navigate(['/admin'])\n          }\n          else if (this.userInfo.Role == 'Host')\n          {\n            this.router.navigate(['/host'])\n          }\n          else if (this.userInfo.Role == 'Guest')\n          {\n            this.router.navigate(['/guest'])\n          }\n          else\n          {\n            this.router.navigate(['/home'])\n          }\n\n    });\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2VkLXVzZXIvbG9nZWQtdXNlci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-loged-user',\n  templateUrl: './loged-user.component.html',\n  styleUrls: ['./loged-user.component.css']\n})\nexport class LogedUserComponent implements OnInit {\n\n  constructor(private router : Router) { }\n\n  ngOnInit() {\n  }\n\n  logOut()\n  {\n    localStorage.removeItem('Role');\n    localStorage.removeItem('ID');\n\n    this.router.navigate(['/home']);\n  }\n\n  changeProfil()\n  {\n    this.router.navigate(['profile'])\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  private LogInUri = \"http://localhost:8080/api/Users/\";\n  constructor(private http: HttpClient) { }\n\n  TryLog(username : any , password : any) : any\n  {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json',\n      \"Authorization\": \"Basic \" + btoa( username + \":\" + password) })\n      \n    };\n    return this.http.get(this.LogInUri+\"Login\",httpOptions).pipe(\n      catchError(e => throwError(alert(\"Eror in LogIn service:  \" + e.error.Message)))\n    );;\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvcHJvZmlsZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { RegistUser, User } from '../Classes/User';\nimport { UserService } from '../user.service';\nimport { Validators, FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  logedUser : User;\n  genders = [\"Male\" , \"Famale\"];\n  invalidPass = false;\n\n  userForm : any;\n  passForm : any;\n  constructor(private userService :UserService,private fb: FormBuilder , private router : Router) { }\n\n  ngOnInit() {\n    this.userService.GetUser().subscribe(data=>{\n      this.logedUser = data as User;\n      console.log(this.logedUser);\n\n      this.userForm = this.fb.group({\n        role: [this.logedUser.Role,Validators.required],\n        username: [this.logedUser.UserName, Validators.required],\n        \n        name: [this.logedUser.Name, Validators.required],\n        surname: [this.logedUser.Surname, Validators.required],\n        gender: [this.logedUser.Gender, Validators.required]\n        \n      });\n\n      this.passForm = this.fb.group({\n         password: [\"\", [Validators.required]],\n         confirmPassword: [, [Validators.required ]],\n      })\n    });\n  }\n\n  onSubmit()\n  {        \n      this.logedUser.Name =  this.userForm.value.name;\n      this.logedUser.Surname = this.userForm.value.surname ; \n      this.logedUser.UserName = this.userForm.value.username; \n      \n      this.logedUser.Gender =  this.userForm.value.gender;\n      \n      this.userService.ProfileChange(this.logedUser).subscribe(data=>{\n        alert(\"Succesfuly changed\");\n         \n        this.returnBack();\n      });         \n    \n  }\n\n  returnBack()\n  {\n    if(localStorage.Role == \"Admin\")\n         this.router.navigate([\"/admin\"]);\n        else if(localStorage.Role == \"Host\")\n        this.router.navigate([\"/host\"]);\n        else if(localStorage.Role == \"Guest\")\n        this.router.navigate([\"/guest\"]);\n  }\n\n  onChange()\n  {\n    if(this.passForm.value.password === this.passForm.value.confirmPassword)\n    {\n      this.invalidPass = false;\n      this.logedUser.Password =  this.passForm.value.password;\n\n      this.userService.ProfileChange(this.logedUser).subscribe(data=>{\n        alert(\"Succesfuly changed\");\n         \n        this.returnBack();\n      }); \n    }\n    else\n    {\n      this.invalidPass = true;\n    }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { RegisterService } from '../register.service';\nimport {  RegistUser, User } from '../Classes/User';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(private fb: FormBuilder , private router : Router , private userService: UserService) { }\n\n  invalidPass = false;\n  registUser : any;\n  genders = [\"Male\" , \"Famale\"];\n\n  registerForm = this.fb.group({\n    username: ['', Validators.required],\n    password: [\"\", [Validators.required,Validators.minLength(6)]],\n    confirmPassword: [, [Validators.required , Validators.minLength(6)]],\n    name: ['', Validators.required],\n    surname: ['', Validators.required],\n    gender: ['', Validators.required]\n    \n  });\n\n  ngOnInit() {\n    \n  }\n\n  onSubmit()\n  {\n    if(this.registerForm.value.password === this.registerForm.value.confirmPassword)\n    {\n      this.invalidPass = false;\n\n      this.registUser = new User();\n      this.registUser.Name =  this.registerForm.value.name;\n      this.registUser.Surname = this.registerForm.value.surname ; \n      this.registUser.Username = this.registerForm.value.username; \n      this.registUser.Password =  this.registerForm.value.password;\n      this.registUser.Gender =  this.registerForm.value.gender;\n      \n      this.userService.Register(this.registUser).subscribe(data=>{\n        alert(\"Host was created\");\n         console.log(this.registUser);\n         this.router.navigate([\"login\"]);\n      });\n      \n    }\n    else\n    {\n      this.invalidPass = true;\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {Apartment } from '../app/Classes/Apartment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n\n  public ApartmentStorage: Apartment ;\n  public HostApartmentStorage: Apartment ;\n  public GuestApartmentStorage: Apartment ;\n  public apartmentID: number ;\n\n    constructor() {}\n\n    public getApartment(): Apartment  {\n        return this.ApartmentStorage;\n    }\n\n    public setApartment(app1: Apartment): void {\n        this.ApartmentStorage = app1;\n    }\n\n    public getHostApartment(): Apartment  {\n      return this.HostApartmentStorage;\n  }\n\n  public setHostApartment(app1: Apartment): void {\n      this.HostApartmentStorage = app1;\n  }\n\n  public getGuestApartment(): Apartment  {\n    return this.GuestApartmentStorage;\n}\n\npublic setGuestApartment(app1: Apartment): void {\n    this.GuestApartmentStorage = app1;\n}\n\npublic getApartmentID(): number  {\n  return this.apartmentID;\n}\n\npublic setApartmentID(app1: number): void {\n  this.apartmentID = app1;\n}\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient, HttpParams } from '@angular/common/http';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private userUri = \"http://localhost:8080/api/Users/\";\n\n  constructor(private http: HttpClient) { }\n\n  Register(user : any) : any\n  {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n     };\n\n    return this.http.put(this.userUri+\"Register\",user,httpOptions).pipe(\n      catchError(e => throwError(console.error(\"Eror in User service:  \" + e.error.Message)))\n    );\n  }\n\n  GetUser() : any\n  {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Role' : localStorage.Role }),\n      params: new HttpParams().set('userId' , localStorage.ID) \n     };\n\n    return this.http.get(this.userUri+\"GetUser\",httpOptions).pipe(\n      catchError(e => throwError(console.error(\"Eror in User service:  \" + e.error.Message)))\n    );\n  }\n\n  ProfileChange(user : any) : any\n  {\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Role' : localStorage.Role }),\n     };\n\n    return this.http.patch(this.userUri+\"ChangeUser\",user,httpOptions).pipe(\n      catchError(e => throwError(console.error(\"Eror in User service:  \" + e.error.Message)))\n    );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}